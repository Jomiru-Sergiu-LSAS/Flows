{
  "name": "cto-engineering",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "0d21c570-abee-4df0-aa50-3f459962afb5",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        528,
        -368
      ],
      "webhookId": "engineering-webhook-id",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "8c106e43-b414-4343-8bde-4d003d99585d",
      "name": "CTO Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        752,
        -368
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {},
      "id": "2bf4976a-368c-47f9-bd1e-154ab8ca5133",
      "name": "Think",
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "position": [
        544,
        304
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "toolDescription": "call this AI Agent that specializes in system architecture, design patterns, technology stack decisions, and scalability planning",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "2cff1ec4-00d3-474b-9c79-81a83a4726db",
      "name": "Software Architect Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        704,
        304
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "call this AI Agent that specializes in CI/CD pipelines, infrastructure automation, containerization, and deployment strategies",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "19dad5ac-b510-4757-8a1e-8283e04d87d4",
      "name": "DevOps Engineer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        1984,
        304
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "call this AI Agent that specializes in application security, vulnerability assessments, secure coding practices, and compliance frameworks",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "b32d80f0-9234-497f-86e2-e9c785f6ae42",
      "name": "Security Engineer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        1728,
        304
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "call this AI Agent that specializes in test automation, quality assurance strategies, test case design, and performance testing",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "3fbd6076-292a-4072-933c-047f86893981",
      "name": "QA Test Engineer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        1472,
        304
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "call this AI Agent that specializes in server-side development, API design, database architecture, and microservices implementation",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "c3faa04e-cbb6-44d5-8656-65778ed7ee3e",
      "name": "Backend Developer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        1216,
        304
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "call this AI Agent that specializes in user interface development, responsive design, frontend frameworks, and user experience optimization",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "0be94cc4-a41e-4d3e-b55d-ac842d6d92ab",
      "name": "Frontend Developer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        960,
        304
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "content": "\n## üß† **CTO AGENT WITH ENGINEERING TEAM**\n\nThis multi-agent n8n automation simulates a complete engineering department. A strategic CTO agent receives your technical requests, analyzes engineering needs, and delegates to specialized agents for architecture, DevOps, security, QA, backend, and frontend development‚Äîdelivering comprehensive technical solutions instantly.\n\nPowered by OpenAI O3 & GPT-4.1-mini Multi-Agent System\nFor any questions or support explore more tips and tutorials here:\n   - YouTube: https://www.youtube.com/@YaronBeen/videos\n   - LinkedIn: https://www.linkedin.com/in/yaronbeen/\n\n### ‚öôÔ∏è **How It Works**\n1. **Chat trigger** receives engineering requests (e.g., \"Design a microservices architecture for e-commerce platform\")\n2. **CTO Agent** (O3) analyzes request and determines required engineering functions\n3. Delegates to specialist agents:\n   - Software Architect Agent\n   - DevOps Engineer Agent\n   - Security Engineer Agent\n   - QA Test Engineer Agent\n   - Backend Developer Agent\n   - Frontend Developer Agent\n4. Each agent uses **GPT-4.1-mini** for fast, focused execution\n5. Results compiled and returned via chat or integrated with development tools\n\n### üë• **Meet Your AI Engineering Team**\n|  |  |  |\n|------|-----------------|----------|\n| üß† **CTO Agent** &nbsp;&nbsp;&nbsp; | Technical strategy & team delegation &nbsp;&nbsp;&nbsp; | O3 &nbsp;&nbsp;&nbsp; |\n| üèóÔ∏è **Software Architect** &nbsp;&nbsp;&nbsp; | System design, patterns, scalability &nbsp;&nbsp;&nbsp; | GPT-4.1-mini &nbsp;&nbsp;&nbsp; |\n| üöÄ **DevOps Engineer** &nbsp;&nbsp;&nbsp; | CI/CD, infrastructure, deployment &nbsp;&nbsp;&nbsp; | GPT-4.1-mini &nbsp;&nbsp;&nbsp; |\n| üîí **Security Engineer** &nbsp;&nbsp;&nbsp; | Security assessments, compliance &nbsp;&nbsp;&nbsp; | GPT-4.1-mini &nbsp;&nbsp;&nbsp; |\n| üß™ **QA Test Engineer** &nbsp;&nbsp;&nbsp; | Test automation, quality strategies &nbsp;&nbsp;&nbsp; | GPT-4.1-mini &nbsp;&nbsp;&nbsp; |\n| ‚öôÔ∏è **Backend Developer** &nbsp;&nbsp;&nbsp; | APIs, databases, microservices &nbsp;&nbsp;&nbsp; | GPT-4.1-mini &nbsp;&nbsp;&nbsp; |\n| üé® **Frontend Developer** &nbsp;&nbsp;&nbsp; | UI/UX, responsive design, frameworks &nbsp;&nbsp;&nbsp; | GPT-4.1-mini &nbsp;&nbsp;&nbsp; |\n\n\n\n### üí° **Use Cases**\n- **Full Stack Development**: End-to-end application architecture and implementation\n- **System Architecture**: Scalable designs for microservices, distributed systems\n- **DevOps Automation**: CI/CD pipelines, containerization, cloud deployment\n- **Security Audits**: Vulnerability assessments, secure coding practices\n- **Quality Assurance**: Test automation frameworks, performance testing\n- **Technical Documentation**: API docs, system diagrams, deployment guides\n\n\n### üí∏ **Cost Optimization**\n- **O3 for CTO**: Strategic technical decisions only\n- **GPT-4.1-mini for specialists**: 90% cost reduction\n- **Parallel processing**: All agents work simultaneously\n- **Code template reuse**: Common patterns and frameworks",
        "height": 1060,
        "width": 804,
        "color": 5
      },
      "id": "95bb74cb-de76-4c99-af69-f79eb7da706f",
      "name": "Sticky Note Main",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2256,
        -480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "o3",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "b3c5174d-3bb8-4f94-9191-e2570bfe8dd2",
      "name": "CTO Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        544,
        -160
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "5c404f56-a4a0-4a4f-a765-ae35342d7b04",
      "name": "Architect Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        704,
        480
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "985d7c41-30f5-4a8a-8817-9773c243300c",
      "name": "Frontend Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        960,
        480
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "95f9310f-ccd2-44cd-9c27-2c9d02c96d1d",
      "name": "Backend Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1216,
        480
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "c4ec0993-5d1d-48c3-a9a4-05e2841a401d",
      "name": "QA Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1472,
        480
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "5a43446e-8030-4ce6-b3ac-e82ec2d388af",
      "name": "Security Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1728,
        480
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "5836b6a6-3398-4152-b8a6-bc882fd2c2f6",
      "name": "DevOps Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1984,
        480
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "Chat trigger that receives engineering requests and initiates the multi-agent workflow with the CTO agent.",
        "height": 96,
        "width": 232,
        "color": 3
      },
      "id": "43e9384b-c62e-4f21-aff1-22a9af4ff25a",
      "name": "Chat Trigger Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        496,
        -496
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Strategic CTO agent  that analyzes technical requests and delegates to specialist engineering agents.",
        "height": 96,
        "width": 232,
        "color": 2
      },
      "id": "6dc0a8c8-066f-41a1-a43b-736a8e1c93bd",
      "name": "CTO Agent Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        752,
        -496
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Think tool  providing reasoning capabilities to CTO agent for strategic decision-making & delegation.",
        "height": 112,
        "width": 196,
        "color": 7
      },
      "id": "f9493324-5706-4250-9336-b33ea7d3cb57",
      "name": "Think Tool Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        480,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Software Architect Agent specializing in system architecture, design patterns, technology stack decisions, and scalability planning.",
        "height": 112,
        "width": 232,
        "color": 4
      },
      "id": "e8840f67-f9ff-4fbb-9f0c-bf6298638ebb",
      "name": "Architect Agent Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        704,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Frontend Developer Agent specializing in UI/UX development, responsive design, frontend frameworks & user experience optimization.",
        "height": 112,
        "width": 232,
        "color": 5
      },
      "id": "5737deb0-44eb-4b2f-9373-6852e41d58ea",
      "name": "Frontend Agent Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        960,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Backend Developer Agent specializing in server-side development, API design, database architecture, and microservices implementation.",
        "height": 112,
        "width": 232,
        "color": 6
      },
      "id": "120a8270-0d5b-4eae-91b8-0d46c53d92b0",
      "name": "Backend Agent Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1216,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "QA Test Engineer Agent specializing in test automation, quality assurance strategies, test case design, and performance testing.",
        "height": 112,
        "width": 232
      },
      "id": "9de7fa84-5d68-4140-8abe-e1a97d0b880e",
      "name": "QA Agent Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1472,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Security Engineer Agent specializing in application security, vulnerability assessments, secure coding practices, and compliance.",
        "height": 112,
        "width": 232,
        "color": 4
      },
      "id": "91591206-f581-4f4e-904f-24409add1a0f",
      "name": "Security Agent Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1728,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "DevOps Engineer Agent specializing in CI/CD pipelines, infrastructure automation, containerization, and deployment strategies.",
        "height": 112,
        "width": 248,
        "color": 2
      },
      "id": "168870f1-fce0-43f0-aa11-ac80332c0672",
      "name": "DevOps Agent Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1984,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "The OpenAI O3 language model providing strategic leadership tech decision making capabilities for the CTO agent.",
        "height": 112,
        "width": 196,
        "color": 2
      },
      "id": "a76f16ce-db1f-4656-b846-2b512d631874",
      "name": "CTO Model Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        480,
        -32
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "name": "rwtool",
        "jsCode": "// Secure Read/Write File Operations Tool\n// Note: This is a simulation that guides users to proper file operations\n// In N8N, actual file operations should use dedicated File nodes\n\n// Define the workspace directory for reference\nconst WORKSPACE_DIR = 'C:\\\\Repo\\\\Tardigrade';\n\n// Blocked file extensions for security\nconst BLOCKED_EXTENSIONS = ['.exe', '.bat', '.cmd', '.ps1', '.vbs', '.scr', '.com'];\n\nfunction validateFileExtension(filePath) {\n  const fileExt = filePath.split('.').pop().toLowerCase();\n  return !BLOCKED_EXTENSIONS.includes('.' + fileExt);\n}\n\nfunction validateContent(content) {\n  if (!content || typeof content !== 'string') return true;\n  \n  const suspiciousPatterns = [\n    /eval\\s*\\(/,\n    /exec\\s*\\(/,\n    /system\\s*\\(/,\n    /shell_exec\\s*\\(/\n  ];\n  \n  return !suspiciousPatterns.some(pattern => pattern.test(content));\n}\n\nfunction validatePath(filePath) {\n  // Basic path traversal check\n  return !filePath.includes('..') && !filePath.includes('\\\\..\\\\') && !filePath.includes('/../');\n}\n\n// Get operation parameters\nconst input = $input.first().json;\nconst operation = input.operation || $fromAI('operation', '', 'string');\nconst filePath = input.file_path || input.filePath || $fromAI('file_path', '', 'string');\nconst content = input.content || $fromAI('content', '', 'string');\nconst dirPath = input.path || input.directory || $fromAI('path', '', 'string');\n\nlet result;\n\n// Validate inputs\nif (operation && ['read', 'write', 'create', 'delete'].includes(operation) && filePath) {\n  if (!validatePath(filePath)) {\n    result = {\n      success: false,\n      error: 'Invalid file path: Path traversal detected',\n      filePath: filePath\n    };\n  } else if (!validateFileExtension(filePath)) {\n    result = {\n      success: false,\n      error: `File extension not allowed for security reasons`,\n      filePath: filePath\n    };\n  } else if (operation === 'write' && !validateContent(content)) {\n    result = {\n      success: false,\n      error: 'Suspicious content detected - operation blocked',\n      filePath: filePath\n    };\n  } else {\n    // Validation passed - provide instructions for actual file operations\n    result = {\n      success: true,\n      operation: operation,\n      filePath: filePath,\n      workspace: WORKSPACE_DIR,\n      message: `File operation '${operation}' validated successfully`,\n      instructions: {\n        read: 'Use N8N Read Binary Files node to read from: ' + WORKSPACE_DIR + '\\\\' + filePath,\n        write: 'Use N8N Write Binary Files node to write to: ' + WORKSPACE_DIR + '\\\\' + filePath,\n        create: 'Use N8N Write Binary Files node to create: ' + WORKSPACE_DIR + '\\\\' + filePath,\n        delete: 'Use N8N Move Binary Data node or filesystem commands to delete: ' + WORKSPACE_DIR + '\\\\' + filePath\n      }[operation],\n      content: operation === 'write' ? content : undefined,\n      timestamp: new Date().toISOString()\n    };\n  }\n} else if (operation === 'list') {\n  result = {\n    success: true,\n    operation: 'list',\n    workspace: WORKSPACE_DIR,\n    path: dirPath || '/',\n    message: 'Directory listing validated',\n    instructions: 'Use filesystem commands or File nodes to list directory: ' + WORKSPACE_DIR + (dirPath ? '\\\\' + dirPath : ''),\n    timestamp: new Date().toISOString()\n  };\n} else {\n  result = {\n    success: false,\n    error: 'Invalid operation or missing parameters',\n    supportedOperations: ['read', 'write', 'create', 'delete', 'list'],\n    workspace: WORKSPACE_DIR,\n    usage: {\n      read: 'Provide: operation=read, file_path=filename',\n      write: 'Provide: operation=write, file_path=filename, content=text',\n      delete: 'Provide: operation=delete, file_path=filename',\n      list: 'Provide: operation=list, path=subdirectory (optional)'\n    }\n  };\n}\n\n// Return as string for LangChain tool compatibility\nif (result.success) {\n  return `‚úÖ ${result.message || 'Operation completed'}\n\nüìÅ Workspace: ${result.workspace}\nüîß Operation: ${result.operation}\nüìÑ File: ${result.filePath || result.path || 'N/A'}\n\n${result.instructions || ''}\n\n${result.content ? 'üìù Content: ' + result.content.substring(0, 200) + (result.content.length > 200 ? '...' : '') : ''}\n\n‚è∞ ${result.timestamp}`;\n} else {\n  return `‚ùå Error: ${result.error}\n\n${result.workspace ? 'üìÅ Workspace: ' + result.workspace : ''}\n${result.supportedOperations ? '\\nüîß Supported operations: ' + result.supportedOperations.join(', ') : ''}\n${result.usage ? '\\n\\nüìñ Usage:\\n' + Object.entries(result.usage).map(([op, desc]) => `‚Ä¢ ${op}: ${desc}`).join('\\n') : ''}`;\n}"
      },
      "id": "381da4a8-998d-4f1a-8dec-9eed1eaa7f3c",
      "name": "RW2",
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "position": [
        1120,
        -352
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "Think": {
      "ai_tool": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "DevOps Engineer Agent": {
      "ai_tool": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "QA Test Engineer Agent": {
      "ai_tool": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Backend Developer Agent": {
      "ai_tool": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Security Engineer Agent": {
      "ai_tool": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Frontend Developer Agent": {
      "ai_tool": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Software Architect Agent": {
      "ai_tool": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "CTO Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CTO Model": {
      "ai_languageModel": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Architect Model": {
      "ai_languageModel": [
        [
          {
            "node": "Software Architect Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Frontend Model": {
      "ai_languageModel": [
        [
          {
            "node": "Frontend Developer Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Backend Model": {
      "ai_languageModel": [
        [
          {
            "node": "Backend Developer Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "QA Model": {
      "ai_languageModel": [
        [
          {
            "node": "QA Test Engineer Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Security Model": {
      "ai_languageModel": [
        [
          {
            "node": "Security Engineer Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "DevOps Model": {
      "ai_languageModel": [
        [
          {
            "node": "DevOps Engineer Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "versionId": "2235aba6-7eae-47d0-9eb6-f2aa483b9421",
  "meta": {
    "templateId": "6911",
    "instanceId": "3fdd671e7fc1859ff2383b05c6eea518207a3d971ca0642cd42531697f273a8c"
  },
  "id": "hezu6BmRCenLnhNo",
  "tags": []
}