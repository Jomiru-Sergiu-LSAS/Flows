{
  "name": "personal-assistant",
  "nodes": [
    {
      "parameters": {
        "content": "Chat trigger that receives personal requests or tasks and initiates the interaction with the Personal Assistant agent.",
        "height": 96,
        "width": 232,
        "color": 3
      },
      "id": "b56c38cc-4482-4249-9836-2913a1e2a227",
      "name": "Chat Trigger Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -64,
        -32
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Personal assistant agent that analyzes submitted requests and provides feedback based on the specific task.",
        "height": 96,
        "width": 232,
        "color": 2
      },
      "id": "95af4bfd-a97d-4b1d-8314-357bc63b809d",
      "name": "CTO Agent Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        208,
        -32
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are a helpful personal assistant. My name is Sergiu."
        }
      },
      "id": "296be0ff-cc73-4c59-aa57-e659d5c41ef9",
      "name": "Assistant Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        208,
        96
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "contextWindowLength": 50000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -64,
        288
      ],
      "id": "280fe77d-341a-489f-a3e3-f06be6c5e922",
      "name": "Memory"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "o3",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "efe5d263-ee4c-4728-876c-57b4671cf32e",
      "name": "Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        208,
        288
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "public": true,
        "options": {
          "loadPreviousSession": "memory"
        }
      },
      "id": "9605a0ec-3e23-4a61-8d74-c14c034f63b6",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        -64,
        96
      ],
      "webhookId": "9eab0524-6cd7-4b81-8bd8-4d050a972a08",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "content": "Provides GPT-4.1-mini LLM language model capabilities for the AI email generation chain with OpenAI API.",
        "height": 112,
        "width": 180
      },
      "id": "26294d4d-ad6e-4ee3-95c1-af665e098ad5",
      "name": "OpenAI Model Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        656,
        -48
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "sendTo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('To', ``, 'string') }}",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {
          "appendAttribution": false,
          "senderName": "Sergiu"
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        896,
        288
      ],
      "id": "cdbca95e-fa20-4fcb-9c11-13b463ff94c3",
      "name": "Gmail",
      "webhookId": "f21a9be7-df59-4f80-a0d4-a22c49589124",
      "credentials": {
        "gmailOAuth2": {
          "id": "6ZNnHZRObc0alAvd",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{$json.output}}",
        "options": {
          "systemMessage": "You are an AI email writing assistant.\nYour task is to Interpret the input request first then generate professional, well-structured emails based on the provided context and instructions. \n\nIf needed Think first, intepret input and generate email structure, then send, or create draft as instructed.\nIf more info needed ask.\n"
        }
      },
      "id": "71f206d1-a96a-48d2-bc51-f09c9dcb246b",
      "name": "Mail Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        640,
        96
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "o3",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "320c188b-0b0b-4180-90ca-be58402163e7",
      "name": "Mail Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        640,
        288
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "description": "Interpret input and generate the required email.\n\nuidelines for sending emails:\n- Always address the sender by name if provided.  \n- Keep the tone respectful, clear, and professional.\n- Elaborate the email if it's too short, or summarize if too long. \n- Structure the email with proper greeting, body, and closing \n- Every new sentence in the body should be from new line\n- Ensure proper grammar and formatting for paragraphs in the body \n- Provide clear answers or actions, and confirm receipt when appropriate.  \n- If the request is unclear, politely ask for clarification.  \n- Keep replies short (3â€“6 sentences), unless a longer explanation is required.  \n- Use correct grammar and formatting.  \n- Do not include subject line in the email body \n\nEmail structure example:\n'Dear [RECIPIENT],\n\nThank you for your message.\n\nI appreciate you taking the time to review my application and proceed accordingly.\nPlease let me know if you need any additional information from my side.\n\nBest regards,\nSergiu'"
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1.1,
      "position": [
        784,
        288
      ],
      "id": "b6a21cab-5f13-4d32-b57c-b4d943c48b84",
      "name": "Think"
    }
  ],
  "pinData": {},
  "connections": {
    "Memory": {
      "ai_memory": [
        [
          {
            "node": "Assistant Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "When chat message received",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Model": {
      "ai_languageModel": [
        [
          {
            "node": "Assistant Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Assistant Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "ai_tool": [
        [
          {
            "node": "Mail Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Assistant Agent": {
      "main": [
        []
      ]
    },
    "Mail Model": {
      "ai_languageModel": [
        [
          {
            "node": "Mail Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Mail Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "c60d1ace-75d7-4a0f-afd8-64ed8a56c046",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3fdd671e7fc1859ff2383b05c6eea518207a3d971ca0642cd42531697f273a8c"
  },
  "id": "9yY5kIpAqzkqFwKT",
  "tags": []
}