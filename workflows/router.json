{
  "name": "router",
  "nodes": [
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ie0wpP3U9v0pVTfh",
          "mode": "list",
          "cachedResultName": "routing"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -144,
        704
      ],
      "id": "3432032b-1798-4d51-be6a-47bf5cafedd5",
      "name": "Architect Actions"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ie0wpP3U9v0pVTfh",
          "mode": "list",
          "cachedResultName": "routing"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1136,
        704
      ],
      "id": "e5c1e2c5-2e30-4316-a2dc-9a28133a89de",
      "name": "DevOps Actions"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ie0wpP3U9v0pVTfh",
          "mode": "list",
          "cachedResultName": "routing"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        880,
        704
      ],
      "id": "33dd4589-c115-42ae-9d7f-2d4ed5cd60c6",
      "name": "Security Actions"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ie0wpP3U9v0pVTfh",
          "mode": "list",
          "cachedResultName": "routing"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        624,
        704
      ],
      "id": "d16017fd-f603-44d5-85b9-fd00f246c259",
      "name": "QA Actions"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ie0wpP3U9v0pVTfh",
          "mode": "list",
          "cachedResultName": "routing"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        368,
        704
      ],
      "id": "0e3ec8f8-7593-4dea-851e-975e11baf8e2",
      "name": "Back Actions"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ie0wpP3U9v0pVTfh",
          "mode": "list",
          "cachedResultName": "routing"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        112,
        704
      ],
      "id": "06030138-0932-4438-b52d-e19a6b620974",
      "name": "Front Actions"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "o3",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "90d38779-1c89-4534-aebb-74481f2265fe",
      "name": "RW Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1248,
        1152
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "a1ffd88d-4e66-4373-b3b1-c89c75d07407",
      "name": "Engineer Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -288,
        1152
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ie0wpP3U9v0pVTfh",
          "mode": "list",
          "cachedResultName": "routing"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1392,
        704
      ],
      "id": "4a7288f3-04e7-4b17-a74d-e7ea1079b4d8",
      "name": "Research Actions"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are a routing agent. Analyze the user request and output ONLY a JSON object with the routing decision.\n\nMake sure to pass chatInput content in the output json as well\n\nRouting rules:\n- For emails, drafts, spam, trash, windows, pc, restart, reboot, startup, shutdown, news, or newsletters → Director of Operations\n- For reports, weekly report, totals, summaries, git, prs, code review, pull requests, merge requests, updates, repositories, JIRA, tickets, issues, CI/CD, build, deploy, pipeline, general chat/questions → Director of Product\n- For engineering, development and reasearch → Director of Engineering\n\nOutput format:\n{\n  \"action\": \"<describe the user request>\",\n  \"agent\": \"<Agent Name>\"\n}\n\nExample outputs:\n{\"action\": \"Clean email spam\", \"agent\": \"Director of Operations\"}\n{\"action\": \"Shutdown computer\", \"agent\": \"Director of Operations\"}"
        }
      },
      "id": "f5d7994b-0c0b-458a-a059-f1d74aac12bf",
      "name": "CTO Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -1040,
        -144
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "content": "\n\n## 🧠 **CTO AI Agent Multi-Domain Router**\n\n\nThis n8n workflow routes every chat through a **CTO Agent** (O3) which analyzes requests and routes through an **Operation Decision** node to three Director-level agents for specialized domains.\n\n### ⚙️ How it works\n1) **Chat Trigger ➜ CTO Agent (O3) ➜ Operation Decision ➜ Decision Switch**  \n   CTO analyzes user requests and outputs JSON routing decisions with memory persistence. Operation Decision node parses JSON and Decision Switch routes to appropriate Director based on agent type.\n\n2) **Three-Domain Director Architecture**\n   - **Director of Operations** *(Operations & System Management)*\n     - **Mail Actions** (spam, drafts, trash cleanup, mail replies)\n     - **News Actions** (newsletters, latest news updates)\n     - **Win Actions** (shutdown, reboot, startup, system operations)\n   \n   - **Director of Product** *(Development Workflows & Project Management)*\n     - **Report Actions** (weekly/monthly reports, summaries, analytics)\n     - **Git Actions** (repos, PRs, code reviews) \n     - **JIRA Actions** (tickets, issues, project tracking)\n     - **Chat Actions** (general conversations)\n     - **CI/CD Actions** (build, deploy, pipelines)\n   \n   - **Director of Engineering** *(Technical Expertise & Development)*\n     - **7 Specialist Engineer Agents** with shared **RW Agent** and **RW Actions**:\n       - Software Architect, Frontend Developer, Backend Developer\n       - QA Test Engineer, Security Engineer, DevOps Engineer, Research Engineer\n     - **Think** tool for coordination and planning\n\n3) **Robust Operation Decision & Switch**\n   - Advanced JSON parsing with multiple fallback mechanisms\n   - Handles markdown code blocks and malformed JSON\n   - Expression-based Decision Switch routes to Directors based on agent mapping\n\n### 🧩 Models & Architecture\n- **CTO Agent:** O3 (primary router with Model)\n- **Director of Operations:** O3 (General Model)\n- **Director of Product:** O3 (Product Model) \n- **Director of Engineering:** O3 (EM Model)\n- **7 Engineering Specialists:** GPT-4.1-mini (Engineer Model)\n- **RW Agent:** O3 (RW Model)\n\n> **Usage:** CTO automatically routes requests through Director-level coordination—ask for emails/system operations, reports/git/JIRA tasks, or technical engineering solutions. Each Director manages specialized tools and actions for their domain.",
        "height": 1044,
        "width": 948,
        "color": 7
      },
      "id": "4614cbdb-7280-4400-9eec-bd9860095cc3",
      "name": "Sticky Note Main",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1344,
        208
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ie0wpP3U9v0pVTfh",
          "mode": "list",
          "cachedResultName": "routing"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        48,
        48
      ],
      "id": "ceaee4e4-f90e-4b32-a99c-6b41f43c524a",
      "name": "Git Actions"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ie0wpP3U9v0pVTfh",
          "mode": "list",
          "cachedResultName": "routing"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        160,
        48
      ],
      "id": "b6718cb9-50f4-4a1e-b1ac-880aa4ce4568",
      "name": "JIRA Actions"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ie0wpP3U9v0pVTfh",
          "mode": "list",
          "cachedResultName": "routing"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        272,
        48
      ],
      "id": "dfde27c0-ddf1-4fc5-893e-2c93e3737174",
      "name": "Chat Actions"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ie0wpP3U9v0pVTfh",
          "mode": "list",
          "cachedResultName": "routing"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        384,
        48
      ],
      "id": "d1aab00b-b4ac-426c-93d9-f9f1db8d25c5",
      "name": "CI/CD Actions"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "bT8VKE7JFnOTfSaU",
          "mode": "list",
          "cachedResultName": "report-weekly"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -64,
        48
      ],
      "id": "851dfae5-848a-400f-b981-057108df751e",
      "name": "Report Actions"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "o3",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "eda0c3a2-7bad-4c22-9dbe-1458c3e2ffe5",
      "name": "EM Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -288,
        400
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "description": "CI status/rerun",
        "workflowId": {
          "__rl": true,
          "value": "REPLACE_WORKFLOW_ID_CICD_ACTIONS"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "repo": "{{ $fromAI('repo','','string') }}",
            "runId": "{{ $fromAI('runId','','string') }}",
            "action": "{{ $fromAI('action','status|rerun','string') }}"
          }
        }
      },
      "name": "RW Actions",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1392,
        1152
      ],
      "id": "ffdec0cc-8781-4b4e-bfc3-23cd4c0a0334"
    },
    {
      "parameters": {
        "toolDescription": "You are Read/Write Agent. \nYou manage reading and writing to local environment",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "367baf48-8493-4744-b058-85fae43aa992",
      "name": "RW Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        1248,
        1008
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a Frontend Developer Agent. \nYou implement UI/UX, responsive design, and frontend frameworks.\n\nCall this AI Agent that specializes in user interface development, responsive design, frontend frameworks, and user experience optimization\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"ui\": \"frontend task\" },\n  \"response\": \"Frontend solution for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "3fb9ed76-d24e-4912-bfcd-3dd64f32938b",
      "name": "Frontend Developer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        -32,
        544
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a Backend Developer Agent. \nYou implement APIs, databases, and backend services.\n\nCall this AI Agent that specializes in server-side development, API design, database architecture, and microservices implementation\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"service\": \"backend task\" },\n  \"response\": \"Backend solution for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "cf2e0ab5-c0b5-4363-bd14-53621744d05e",
      "name": "Backend Developer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        224,
        544
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a QA Test Engineer Agent. \nYou ensure quality through test design, automation, and validation.\n\nCall this AI Agent that specializes in test automation, quality assurance strategies, test case design, and performance testing\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"test\": \"qa task\" },\n  \"response\": \"QA solution for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "d036c15f-49cf-4c38-a1f2-024aba1d3385",
      "name": "QA Test Engineer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        480,
        544
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a Security Engineer Agent. \nYou identify vulnerabilities, enforce best practices, and improve compliance.\n\nCall this AI Agent that specializes in application security, vulnerability assessments, secure coding practices, and compliance frameworks\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"security\": \"security task\" },\n  \"response\": \"Security advice for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "9d43bfdb-4b91-4bf8-8e7b-068e6d05b353",
      "name": "Security Engineer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        736,
        544
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a DevOps Engineer Agent. \nYou manage CI/CD pipelines, cloud deployments, and infrastructure as code.\n\nCall this AI Agent that specializes in CI/CD pipelines, infrastructure automation, containerization, and deployment strategies\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"pipeline\": \"devops task\" },\n  \"response\": \"DevOps solution for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "a468208e-c046-44bd-9caf-1a98d34c76e2",
      "name": "DevOps Engineer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        992,
        544
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a Software Architect Agent. \nYou design scalable systems, select patterns, and propose high-level solutions.\n\nCall this AI Agent that specializes in system architecture, design patterns, technology stack decisions, and scalability planning\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"system\": \"architecture details\" },\n  \"response\": \"Architecture proposal for Sergiu\"\n}",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "1b9ca660-3f5a-43a5-8d46-857dcb0ed9a5",
      "name": "Software Architect Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        -288,
        544
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {},
      "id": "4be9c301-388d-433a-9138-c9dc314dc284",
      "name": "Think",
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "position": [
        -128,
        400
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "description": "Call this tool to handle, drafts, draft cleanup, spam, spam cleanup, trash, trash cleanup, as well as mail replies or creation of new mail drafts",
        "workflowId": {
          "__rl": true,
          "value": "luB6neTADgM0YTIH",
          "mode": "list",
          "cachedResultName": "mail-tool"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -64,
        -304
      ],
      "id": "485ac03a-b1d7-4594-8097-e77086615941",
      "name": "Mail Actions"
    },
    {
      "parameters": {
        "description": "Call this tool to handle news, newsletters, latest news, etc.",
        "workflowId": {
          "__rl": true,
          "value": "9MWvHmSry7VECDzJ",
          "mode": "list",
          "cachedResultName": "news-tool"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        48,
        -304
      ],
      "id": "bbd5b9a0-743a-42f8-805c-6d2c4616eb88",
      "name": "News Actions"
    },
    {
      "parameters": {
        "description": "Call this tool to handle windows, pc, admin stuff, such as startup, shutdown, restart, reboot, halt etc.",
        "workflowId": {
          "__rl": true,
          "value": "9MKVJd2X6cEHduCK",
          "mode": "list",
          "cachedResultName": "win-tool"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        160,
        -304
      ],
      "id": "f3d402e5-ab9e-4a6d-bfe5-af4f6a6fe835",
      "name": "Win Actions"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  let parsed;\n  let outputText = item.json.output || '';\n  \n  // Handle case where output might be wrapped in markdown code blocks\n  let jsonText = outputText.replace(/^```json\\n?/, '').replace(/\\n?```$/, '').trim();\n  \n  try {\n    parsed = JSON.parse(jsonText);\n    return { \n      json: {\n        action: parsed.action || 'UNKNOWN',\n        agent: parsed.agent || 'UNKNOWN'\n      }\n    };\n  } catch (e) {\n    // Try to extract JSON from the text using regex\n    const jsonMatch = outputText.match(/{[\\s\\S]*?}/);\n    if (jsonMatch) {\n      try {\n        parsed = JSON.parse(jsonMatch[0]);\n        return { \n          json: {\n            action: parsed.action || 'UNKNOWN',\n            agent: parsed.agent || 'UNKNOWN'\n          }\n        };\n      } catch (e2) {\n        // Fallback: try to extract values manually\n        const actionMatch = outputText.match(/\"action\"\\s*:\\s*\"([^\"]*)\"/);\n        const agentMatch = outputText.match(/\"agent\"\\s*:\\s*\"([^\"]*)\"/);\n        \n        if (actionMatch && agentMatch) {\n          return { \n            json: {\n              action: actionMatch[1],\n              agent: agentMatch[1]\n            }\n          };\n        }\n      }\n    }\n    \n    // Final fallback\n    console.log('Failed to parse JSON from output:', outputText);\n    return { \n      json: {\n        action: \"UNKNOWN\",\n        agent: \"Chat Agent\"\n      }\n    };\n  }\n});\n"
      },
      "id": "bd1dbbc6-e299-4f36-8df1-f6f920546e54",
      "name": "Operation Decision",
      "type": "n8n-nodes-base.code",
      "position": [
        -736,
        -144
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "public": true,
        "options": {
          "loadPreviousSession": "memory"
        }
      },
      "id": "92752533-e9fc-4115-8e76-3d795dd20533",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        -1344,
        -144
      ],
      "webhookId": "9eab0524-6cd7-4b81-8bd8-4d050a972a08",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "o3",
          "mode": "list",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "8b787431-1cbf-4dae-aaad-94ec981eda97",
      "name": "Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -1040,
        48
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 500000000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -1344,
        48
      ],
      "id": "5d11727b-c5bb-4ff4-9238-8133013bd8d1",
      "name": "Memory"
    },
    {
      "parameters": {
        "mode": "expression",
        "numberOutputs": 3,
        "output": "={{ (() => {\n  const a = String($json.agent ?? '').trim().toLowerCase();\n  const map = {\n    'director of operations': 0,\n    'director of product': 1,\n    'director of engineering': 2,\n  };\n  return map[a] ?? -1; // -1 routes to fallback (enable it)\n})() }}"
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -544,
        -160
      ],
      "id": "7894fc93-c530-47af-a88b-0a6d1c940afd",
      "name": "Decision Switch"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.action }}",
        "options": {
          "systemMessage": "You are a helpful VP of Operations Assistant. \nMy name is Sergiu.\n\n🔑 Rules:\n- Do not just provide chat feedback. Trigger tools only and provide feedback from tools.\n- Call \"Mail Actions\" tool → For emails, drafts, spam, trash.\n- Call \"News Actions\" tool → For news, newsletter, latest news.\n- Call \"Win Actions\" tool → For windows, pc, restart, reboot, startup, shutdown.\n\nExample outputs:\n\n\"query\": \n{\n\"chatInput\": \n\"Delete trash mails\",\n\"instructions\": \n\"Please delete all messages from the trash folder in the mail account.\"\n}"
        }
      },
      "id": "d4fa38b1-a978-437d-91f7-9332547ff422",
      "name": "Director of Operations",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -288,
        -496
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.action }}",
        "options": {
          "systemMessage": "You are a helpful VP of Product Assistant. \nMy name is Sergiu.\n\n🔑 Rules:\n- Do not just provide chat feedback. Trigger tools only.\n- Call \"Report Actions\" tool → For handling all reports and summaries, including weekly, monthly, daily.\n\nExample outputs:\n\n\"query\": \n{\n\"chatInput\": \n\"Generate Report\",\n\"instructions\": \n\"Please generate the weekly report.\"\n}"
        }
      },
      "id": "306ec933-4812-4674-aabc-62ec4e61aa47",
      "name": "Director of Product",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -288,
        -144
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.action }}",
        "options": {
          "systemMessage": "You are a helpful Git Agent. \nMy name is Sergiu.\n\n🔑 Rules:\n- Do not just provide chat feedback. Trigger tools only.\n- For handling git and code stuff → call \"Git\" flow tool."
        }
      },
      "id": "a1b21e66-7b2d-4235-9dd5-4d0f8551993d",
      "name": "Director of Engineering",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -288,
        208
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "o3",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "7b1b7921-f43f-4d23-ab9e-a44886ed0198",
      "name": "Product Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -288,
        48
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "o3",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "e9c004b4-d693-42b4-b609-421e47d72d00",
      "name": "General Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -288,
        -304
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "You are a DevOps Engineer Agent. \nYou manage CI/CD pipelines, cloud deployments, and infrastructure as code.\n\nCall this AI Agent that specializes in CI/CD pipelines, infrastructure automation, containerization, and deployment strategies\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"pipeline\": \"devops task\" },\n  \"response\": \"DevOps solution for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "5343d637-cb50-48a3-aaca-e849367b879b",
      "name": "Research Engineer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        1248,
        544
      ],
      "typeVersion": 2.2
    }
  ],
  "pinData": {},
  "connections": {
    "Research Actions": {
      "ai_tool": [
        [
          {
            "node": "Research Engineer Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "CTO Agent": {
      "main": [
        [
          {
            "node": "Operation Decision",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Architect Actions": {
      "ai_tool": [
        [
          {
            "node": "Software Architect Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "DevOps Actions": {
      "ai_tool": [
        [
          {
            "node": "DevOps Engineer Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Security Actions": {
      "ai_tool": [
        [
          {
            "node": "Security Engineer Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "QA Actions": {
      "ai_tool": [
        [
          {
            "node": "QA Test Engineer Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Back Actions": {
      "ai_tool": [
        [
          {
            "node": "Backend Developer Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Front Actions": {
      "ai_tool": [
        [
          {
            "node": "Frontend Developer Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "EM Model": {
      "ai_languageModel": [
        [
          {
            "node": "Director of Engineering",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "RW Actions": {
      "ai_tool": [
        [
          {
            "node": "RW Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "RW Model": {
      "ai_languageModel": [
        [
          {
            "node": "RW Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "RW Agent": {
      "ai_tool": [
        [
          {
            "node": "Frontend Developer Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Backend Developer Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "QA Test Engineer Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Security Engineer Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "DevOps Engineer Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Software Architect Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Engineer Model": {
      "ai_languageModel": [
        [
          {
            "node": "Frontend Developer Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Backend Developer Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "QA Test Engineer Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Security Engineer Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "DevOps Engineer Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Software Architect Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Research Engineer Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Frontend Developer Agent": {
      "ai_tool": [
        [
          {
            "node": "Director of Engineering",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Backend Developer Agent": {
      "ai_tool": [
        [
          {
            "node": "Director of Engineering",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "QA Test Engineer Agent": {
      "ai_tool": [
        [
          {
            "node": "Director of Engineering",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Security Engineer Agent": {
      "ai_tool": [
        [
          {
            "node": "Director of Engineering",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "DevOps Engineer Agent": {
      "ai_tool": [
        [
          {
            "node": "Director of Engineering",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Software Architect Agent": {
      "ai_tool": [
        [
          {
            "node": "Director of Engineering",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Director of Engineering",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Report Actions": {
      "ai_tool": [
        [
          {
            "node": "Director of Product",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "CI/CD Actions": {
      "ai_tool": [
        [
          {
            "node": "Director of Product",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Chat Actions": {
      "ai_tool": [
        [
          {
            "node": "Director of Product",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "JIRA Actions": {
      "ai_tool": [
        [
          {
            "node": "Director of Product",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Git Actions": {
      "ai_tool": [
        [
          {
            "node": "Director of Product",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Win Actions": {
      "ai_tool": [
        [
          {
            "node": "Director of Operations",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "News Actions": {
      "ai_tool": [
        [
          {
            "node": "Director of Operations",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Mail Actions": {
      "ai_tool": [
        [
          {
            "node": "Director of Operations",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Operation Decision": {
      "main": [
        [
          {
            "node": "Decision Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "CTO Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Model": {
      "ai_languageModel": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Memory": {
      "ai_memory": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "When chat message received",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Decision Switch": {
      "main": [
        [
          {
            "node": "Director of Operations",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Director of Product",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Director of Engineering",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "General Model": {
      "ai_languageModel": [
        [
          {
            "node": "Director of Operations",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Product Model": {
      "ai_languageModel": [
        [
          {
            "node": "Director of Product",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Research Engineer Agent": {
      "ai_tool": [
        [
          {
            "node": "Director of Engineering",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "fdf377cf-6da6-412a-8e5d-cf9c1dfaab94",
  "meta": {
    "instanceId": "3fdd671e7fc1859ff2383b05c6eea518207a3d971ca0642cd42531697f273a8c"
  },
  "id": "ie0wpP3U9v0pVTfh",
  "tags": []
}