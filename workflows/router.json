{
  "name": "router",
  "nodes": [
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ie0wpP3U9v0pVTfh",
          "mode": "list",
          "cachedResultName": "routing"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        720,
        1040
      ],
      "id": "e9a1690b-347e-45d7-ac95-641e6e217442",
      "name": "Architect Actions"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ie0wpP3U9v0pVTfh",
          "mode": "list",
          "cachedResultName": "routing"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        2000,
        1040
      ],
      "id": "5c24be51-4dd2-40c3-9f3d-e3d68f977c5c",
      "name": "DevOps Actions"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ie0wpP3U9v0pVTfh",
          "mode": "list",
          "cachedResultName": "routing"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1744,
        1040
      ],
      "id": "073997c5-c479-4c5b-8124-74a5df363148",
      "name": "Security Actions"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ie0wpP3U9v0pVTfh",
          "mode": "list",
          "cachedResultName": "routing"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1488,
        1040
      ],
      "id": "0c993ef6-7edf-48d4-bee3-499e8e1408ed",
      "name": "QA Actions"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ie0wpP3U9v0pVTfh",
          "mode": "list",
          "cachedResultName": "routing"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1232,
        1040
      ],
      "id": "5995f999-1e85-42c6-91b2-b186b85a70cf",
      "name": "Back Actions"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ie0wpP3U9v0pVTfh",
          "mode": "list",
          "cachedResultName": "routing"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        976,
        1040
      ],
      "id": "86d96277-f197-4423-81ed-155f23de81c0",
      "name": "Front Actions"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "o3",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "988f9861-fd21-4085-9c43-ea452ae7e355",
      "name": "RW Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        576,
        1392
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "cc444d66-a86e-4298-b273-0a6f5c0984c6",
      "name": "Engineer Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        2256,
        1248
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ie0wpP3U9v0pVTfh",
          "mode": "list",
          "cachedResultName": "routing"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        2256,
        1040
      ],
      "id": "f483fa16-03bf-4212-bac4-209ae68fdcb0",
      "name": "Research Actions"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are a routing agent. Analyze the user request and output ONLY a JSON object with the routing decision.\nMake sure to pass chatInput content in the output json as well\n\nRouting rules:\n- For emails, drafts, spam, trash, reports, weekly report, totals, summaries, windows, pc, restart, reboot, startup, shutdown, news, or newsletters → Director of Operations\n- For git, prs, code review, pull requests, merge requests, updates, repositories, JIRA, tickets, issues, CI/CD, build, deploy, pipeline, general chat/questions → Director of Product\n- For engineering, development, research, and read, write or delete operations → Director of Engineering\n\nOutput format:\n{\n  \"action\": \"<describe the user request>\",\n  \"agent\": \"<Agent Name>\"\n}\n\nExample outputs:\n{\"action\": \"Clean email spam\", \"agent\": \"Director of Operations\"}\n{\"action\": \"Shutdown computer\", \"agent\": \"Director of Operations\"}"
        }
      },
      "id": "a4b4f287-8d3b-49c8-adc4-56fc991db329",
      "name": "CTO Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -176,
        192
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "content": "\n\n## 🧠 **CTO AI Agent Multi-Domain Router**\n\n\nThis n8n workflow routes every chat through a **CTO Agent** (O3) which analyzes requests and routes through an **Operation Decision** node to three Director-level agents for specialized domains.\n\n### ⚙️ How it works\n1) **Chat Trigger ➜ CTO Agent (O3) ➜ Operation Decision ➜ Decision Switch**  \n   CTO analyzes user requests and outputs JSON routing decisions with memory persistence. Operation Decision node parses JSON and Decision Switch routes to appropriate Director based on agent type.\n\n2) **Three-Domain Director Architecture**\n   - **Director of Operations** *(Operations & System Management)*\n     - **Mail Actions** (spam, drafts, trash cleanup, mail replies)\n     - **News Actions** (newsletters, latest news updates)\n     - **Win Actions** (shutdown, reboot, startup, system operations)\n     - **Report Actions** (weekly/monthly reports, summaries, analytics)\n   \n   - **Director of Product** *(Development Workflows & Project Management)*\n     - **Git Actions** (repos, PRs, code reviews) \n     - **JIRA Actions** (tickets, issues, project tracking)\n     - **Chat Actions** (general conversations)\n     - **CI/CD Actions** (build, deploy, pipelines)\n   \n   - **Director of Engineering** *(Technical Expertise & Development)*\n     - **7 Specialist Engineer Agents** with shared **RW Agent** and **RW Actions**:\n       - Software Architect, Frontend Developer, Backend Developer\n       - QA Test Engineer, Security Engineer, DevOps Engineer, Research Engineer\n     - **Think** tool for coordination and planning\n\n3) **Robust Operation Decision & Switch**\n   - Advanced JSON parsing with multiple fallback mechanisms\n   - Handles markdown code blocks and malformed JSON\n   - Expression-based Decision Switch routes to Directors based on agent mapping\n\n### 🧩 Models & Architecture\n- **CTO Agent:** O3 (primary router with Model)\n- **Director of Operations:** O3 (General Model)\n- **Director of Product:** O3 (Product Model) \n- **Director of Engineering:** O3 (EM Model)\n- **7 Engineering Specialists:** GPT-4.1-mini (Engineer Model)\n- **RW Agent:** O3 (RW Model)\n\n> **Usage:** CTO automatically routes requests through Director-level coordination—ask for emails/system operations, reports/git/JIRA tasks, or technical engineering solutions. Each Director manages specialized tools and actions for their domain.",
        "height": 1044,
        "width": 948,
        "color": 7
      },
      "id": "294855ce-9e2f-482a-96cd-a6ddd05f8bc8",
      "name": "Sticky Note Main",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -480,
        544
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "description": "Call this tool to handle all git updates, git pulls, git latest, pull requests, merge requests, pr's, mr's, code reviews, etc.\n",
        "workflowId": {
          "__rl": true,
          "value": "E58bptNtshnefZyz",
          "mode": "list",
          "cachedResultName": "git-tool"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        800,
        384
      ],
      "id": "2aa66828-e005-4fa4-a108-95acf5bba3cf",
      "name": "Git Actions"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        912,
        384
      ],
      "id": "faff1083-d31c-4e9f-810d-a7628f37e604",
      "name": "JIRA Actions"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1024,
        384
      ],
      "id": "f3c7fb8f-6dfe-48e4-b857-43024e55f8f4",
      "name": "Chat Actions"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1136,
        384
      ],
      "id": "b92abc0c-673e-414d-9a5f-68b42b9dbfd6",
      "name": "CI/CD Actions"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "o3",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "be5f7e7d-6dad-4bfe-9baf-6c98647db814",
      "name": "EM Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        576,
        736
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "description": "Call this tool to handle all read, write, delete file operations.",
        "workflowId": {
          "__rl": true,
          "value": "vvKOjDSXDqyYbpok",
          "mode": "list",
          "cachedResultName": "rw-tool"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "name": "RW Actions",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        720,
        1392
      ],
      "id": "7e694747-940c-4cee-be26-893529f0fb90"
    },
    {
      "parameters": {
        "toolDescription": "Call this tool to handle all read, write, delete file operations.",
        "text": "=Do not reason or give any feedback, just trigger the tools depending on the instructions below.\n\nTrigger \"RW Actions\" tool → For operations like file read, content read, write content, write to file, delete file, etc.\n{{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "befe118b-727f-4822-a1c4-50a940012e99",
      "name": "RW Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        576,
        1248
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a Frontend Developer Agent. \nYou implement UI/UX, responsive design, and frontend frameworks.\n\nCall this AI Agent that specializes in user interface development, responsive design, frontend frameworks, and user experience optimization\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"ui\": \"frontend task\" },\n  \"response\": \"Frontend solution for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "1c0b5be5-3077-4ea0-9ff9-07fef9e2b4ef",
      "name": "Frontend Developer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        832,
        880
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a Backend Developer Agent. \nYou implement APIs, databases, and backend services.\n\nCall this AI Agent that specializes in server-side development, API design, database architecture, and microservices implementation\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"service\": \"backend task\" },\n  \"response\": \"Backend solution for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "88e3b698-1cec-4087-a02b-de03253e9fc5",
      "name": "Backend Developer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        1088,
        880
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a QA Test Engineer Agent. \nYou ensure quality through test design, automation, and validation.\n\nCall this AI Agent that specializes in test automation, quality assurance strategies, test case design, and performance testing\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"test\": \"qa task\" },\n  \"response\": \"QA solution for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "5cdf044b-0643-4c5c-8d60-baa85dea11fd",
      "name": "QA Test Engineer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        1344,
        880
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a Security Engineer Agent. \nYou identify vulnerabilities, enforce best practices, and improve compliance.\n\nCall this AI Agent that specializes in application security, vulnerability assessments, secure coding practices, and compliance frameworks\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"security\": \"security task\" },\n  \"response\": \"Security advice for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "fb1bc276-b10e-4994-880b-2031c2952b2e",
      "name": "Security Engineer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        1600,
        880
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a DevOps Engineer Agent. \nYou manage CI/CD pipelines, cloud deployments, and infrastructure as code.\n\nCall this AI Agent that specializes in CI/CD pipelines, infrastructure automation, containerization, and deployment strategies\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"pipeline\": \"devops task\" },\n  \"response\": \"DevOps solution for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "1905ca29-97e9-4377-9987-e0dfbcac4968",
      "name": "DevOps Engineer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        1856,
        880
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a Software Architect Agent. \nYou design scalable systems, select patterns, and propose high-level solutions.\n\nCall this AI Agent that specializes in system architecture, design patterns, technology stack decisions, and scalability planning\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"system\": \"architecture details\" },\n  \"response\": \"Architecture proposal for Sergiu\"\n}",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "15fbf43c-e17e-4ace-9f88-22214ad0df83",
      "name": "Software Architect Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        576,
        880
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {},
      "id": "e4f0c851-c800-464b-8355-c13433463692",
      "name": "Think",
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "position": [
        736,
        736
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "description": "Call this tool to handle, drafts, draft cleanup, spam, spam cleanup, trash, trash cleanup, as well as mail replies or creation of new mail drafts",
        "workflowId": {
          "__rl": true,
          "value": "luB6neTADgM0YTIH",
          "mode": "list",
          "cachedResultName": "mail-tool"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        800,
        32
      ],
      "id": "c776fc6b-4fb0-4269-8cb9-795d5d62dd0d",
      "name": "Mail Actions"
    },
    {
      "parameters": {
        "description": "Call this tool to handle news, newsletters, latest news, etc.",
        "workflowId": {
          "__rl": true,
          "value": "9MWvHmSry7VECDzJ",
          "mode": "list",
          "cachedResultName": "news-tool"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        912,
        32
      ],
      "id": "bb9bbf0d-1f44-4de3-aad8-693611396c6d",
      "name": "News Actions"
    },
    {
      "parameters": {
        "description": "Call this tool to handle windows, pc, admin stuff, such as startup, shutdown, restart, reboot, halt etc.",
        "workflowId": {
          "__rl": true,
          "value": "9MKVJd2X6cEHduCK",
          "mode": "list",
          "cachedResultName": "win-tool"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1024,
        32
      ],
      "id": "8fefa9d1-4622-4100-a863-c358f9f76126",
      "name": "Win Actions"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  let parsed;\n  let outputText = item.json.output || '';\n  \n  // Handle case where output might be wrapped in markdown code blocks\n  let jsonText = outputText.replace(/^```json\\n?/, '').replace(/\\n?```$/, '').trim();\n  \n  try {\n    parsed = JSON.parse(jsonText);\n    return { \n      json: {\n        action: parsed.action || 'UNKNOWN',\n        agent: parsed.agent || 'UNKNOWN'\n      }\n    };\n  } catch (e) {\n    // Try to extract JSON from the text using regex\n    const jsonMatch = outputText.match(/{[\\s\\S]*?}/);\n    if (jsonMatch) {\n      try {\n        parsed = JSON.parse(jsonMatch[0]);\n        return { \n          json: {\n            action: parsed.action || 'UNKNOWN',\n            agent: parsed.agent || 'UNKNOWN'\n          }\n        };\n      } catch (e2) {\n        // Fallback: try to extract values manually\n        const actionMatch = outputText.match(/\"action\"\\s*:\\s*\"([^\"]*)\"/);\n        const agentMatch = outputText.match(/\"agent\"\\s*:\\s*\"([^\"]*)\"/);\n        \n        if (actionMatch && agentMatch) {\n          return { \n            json: {\n              action: actionMatch[1],\n              agent: agentMatch[1]\n            }\n          };\n        }\n      }\n    }\n    \n    // Final fallback\n    console.log('Failed to parse JSON from output:', outputText);\n    return { \n      json: {\n        action: \"UNKNOWN\",\n        agent: \"Chat Agent\"\n      }\n    };\n  }\n});\n"
      },
      "id": "07071869-f083-4bb5-8979-1c3ec0c6488e",
      "name": "Operation Decision",
      "type": "n8n-nodes-base.code",
      "position": [
        128,
        192
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "public": true,
        "options": {
          "loadPreviousSession": "memory"
        }
      },
      "id": "67041508-fe57-45b6-b80d-b63f6cf630f3",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        -480,
        192
      ],
      "webhookId": "9eab0524-6cd7-4b81-8bd8-4d050a972a08",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "o3",
          "mode": "list",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "9c7b5847-9178-4138-8b3f-d1ab565b1cc5",
      "name": "Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -176,
        384
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 500000000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -480,
        384
      ],
      "id": "469b3eda-4343-40e0-a36e-81c346418894",
      "name": "Memory"
    },
    {
      "parameters": {
        "mode": "expression",
        "numberOutputs": 3,
        "output": "={{ (() => {\n  const a = String($json.agent ?? '').trim().toLowerCase();\n  const map = {\n    'director of operations': 0,\n    'director of product': 1,\n    'director of engineering': 2,\n  };\n  return map[a] ?? -1; // -1 routes to fallback (enable it)\n})() }}"
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        320,
        176
      ],
      "id": "e99cc42c-8705-4d45-8e81-bfaebaed1b53",
      "name": "Decision Switch"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.action }}",
        "options": {
          "systemMessage": "You are a helpful Director of Operations Assistant. \nMy name is Sergiu.\n\n🔑 Rules:\n- Do not just provide chat feedback. Trigger tools only and provide feedback from tools.\n- Call \"Mail Actions\" tool → For emails, drafts, spam, trash.\n- Call \"News Actions\" tool → For news, newsletter, latest news.\n- Call \"Win Actions\" tool → For windows, pc, restart, reboot, startup, shutdown.\n- Call \"Report Actions\" tool → For handling all reports and summaries, including weekly, monthly, daily.\n\nExample outputs:\n\n\"query\": \n{\n\"chatInput\": \n\"Delete trash mails\",\n\"instructions\": \n\"Please delete all messages from the trash folder in the mail account.\"\n}\n"
        }
      },
      "id": "1891f5c9-4fb8-4abd-86a7-f0688dfc09da",
      "name": "Director of Operations",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        576,
        -160
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.action }}",
        "options": {
          "systemMessage": "You are a helpful Director of Product Assistant.\nMy name is Sergiu.\n\n🔑 Rules:\n- Do not just provide chat feedback. Trigger tools only.\n- Call \"Git Actions\" tool → For handling all git updates, git pulls, git latest, pull requests, merge requests, pr's, mr's, code reviews, etc.\n\nExample outputs:\n\n\"query\": \n{\n\"chatInput\": \n\"Check prs\",\n\"instructions\": \n\"Please check if any pull requests are available.\"\n}"
        }
      },
      "id": "f9b0fc44-5d70-4ad6-8af2-dcc482fd11fe",
      "name": "Director of Product",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        576,
        192
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.action }}",
        "options": {
          "systemMessage": "You are a helpful Director of Engineering Agent. \nMy name is Sergiu.\n\n🔑 Rules:\n- Do not just provide chat feedback. Trigger tools only.\n- For handling read, write or delete operations call \"RW Agent\" tool"
        }
      },
      "id": "37f2e4ed-0d4c-474b-9436-b8d115d3bd21",
      "name": "Director of Engineering",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        576,
        544
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "o3",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "de4c2df0-cdc0-46b5-bd41-9257a8c9347e",
      "name": "Product Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        576,
        384
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "o3",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "9b36bdf3-6f46-4d09-9bfa-c94c869bc966",
      "name": "General Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        576,
        32
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "You are a DevOps Engineer Agent. \nYou manage CI/CD pipelines, cloud deployments, and infrastructure as code.\n\nCall this AI Agent that specializes in CI/CD pipelines, infrastructure automation, containerization, and deployment strategies\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"pipeline\": \"devops task\" },\n  \"response\": \"DevOps solution for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "cbef737c-e8df-45a7-9eb7-345806b7359c",
      "name": "Research Engineer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        2112,
        880
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "description": "Call this tool to handle all reports, totals and summaries, including weekly, monthly, daily.\n",
        "workflowId": {
          "__rl": true,
          "value": "bT8VKE7JFnOTfSaU",
          "mode": "list",
          "cachedResultName": "report-tool"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1136,
        32
      ],
      "id": "b8e1b1b1-14fd-4203-ab2e-2b760a30cda2",
      "name": "Report Actions"
    }
  ],
  "pinData": {},
  "connections": {
    "Research Actions": {
      "ai_tool": [
        [
          {
            "node": "Research Engineer Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "CTO Agent": {
      "main": [
        [
          {
            "node": "Operation Decision",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Architect Actions": {
      "ai_tool": [
        [
          {
            "node": "Software Architect Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "DevOps Actions": {
      "ai_tool": [
        [
          {
            "node": "DevOps Engineer Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Security Actions": {
      "ai_tool": [
        [
          {
            "node": "Security Engineer Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "QA Actions": {
      "ai_tool": [
        [
          {
            "node": "QA Test Engineer Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Back Actions": {
      "ai_tool": [
        [
          {
            "node": "Backend Developer Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Front Actions": {
      "ai_tool": [
        [
          {
            "node": "Frontend Developer Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "EM Model": {
      "ai_languageModel": [
        [
          {
            "node": "Director of Engineering",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "RW Actions": {
      "ai_tool": [
        [
          {
            "node": "RW Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "RW Model": {
      "ai_languageModel": [
        [
          {
            "node": "RW Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "RW Agent": {
      "ai_tool": [
        [
          {
            "node": "Frontend Developer Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Backend Developer Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "QA Test Engineer Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Security Engineer Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "DevOps Engineer Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Software Architect Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Director of Engineering",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Engineer Model": {
      "ai_languageModel": [
        [
          {
            "node": "Frontend Developer Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Backend Developer Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "QA Test Engineer Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Security Engineer Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "DevOps Engineer Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Software Architect Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Research Engineer Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Frontend Developer Agent": {
      "ai_tool": [
        [
          {
            "node": "Director of Engineering",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Backend Developer Agent": {
      "ai_tool": [
        [
          {
            "node": "Director of Engineering",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "QA Test Engineer Agent": {
      "ai_tool": [
        [
          {
            "node": "Director of Engineering",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Security Engineer Agent": {
      "ai_tool": [
        [
          {
            "node": "Director of Engineering",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "DevOps Engineer Agent": {
      "ai_tool": [
        [
          {
            "node": "Director of Engineering",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Software Architect Agent": {
      "ai_tool": [
        [
          {
            "node": "Director of Engineering",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Director of Engineering",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "CI/CD Actions": {
      "ai_tool": [
        [
          {
            "node": "Director of Product",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Chat Actions": {
      "ai_tool": [
        [
          {
            "node": "Director of Product",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "JIRA Actions": {
      "ai_tool": [
        [
          {
            "node": "Director of Product",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Git Actions": {
      "ai_tool": [
        [
          {
            "node": "Director of Product",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Win Actions": {
      "ai_tool": [
        [
          {
            "node": "Director of Operations",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "News Actions": {
      "ai_tool": [
        [
          {
            "node": "Director of Operations",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Mail Actions": {
      "ai_tool": [
        [
          {
            "node": "Director of Operations",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Operation Decision": {
      "main": [
        [
          {
            "node": "Decision Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "CTO Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Model": {
      "ai_languageModel": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Memory": {
      "ai_memory": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "When chat message received",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Decision Switch": {
      "main": [
        [
          {
            "node": "Director of Operations",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Director of Product",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Director of Engineering",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "General Model": {
      "ai_languageModel": [
        [
          {
            "node": "Director of Operations",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Product Model": {
      "ai_languageModel": [
        [
          {
            "node": "Director of Product",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Research Engineer Agent": {
      "ai_tool": [
        [
          {
            "node": "Director of Engineering",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Report Actions": {
      "ai_tool": [
        [
          {
            "node": "Director of Operations",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "5c62815e-c12a-48c3-a4f7-44ee47aafd29",
  "meta": {
    "instanceId": "3fdd671e7fc1859ff2383b05c6eea518207a3d971ca0642cd42531697f273a8c"
  },
  "id": "ie0wpP3U9v0pVTfh",
  "tags": []
}