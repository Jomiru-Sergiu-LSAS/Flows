{
  "name": "mail-draft",
  "nodes": [
    {
      "parameters": {
        "content": "This workflow takes input instructions, processes it with LLM to generate emails, and saves them as drafts.",
        "height": 112,
        "width": 192
      },
      "id": "27cd39bf-c4c2-47fa-a032-2b4679fe4595",
      "name": "Workflow Description",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -416,
        -128
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Uses LLM AI language chain to generate professional emails based on user input context and instructions using OpenAI.",
        "height": 112,
        "width": 228
      },
      "id": "0f7234c1-1281-48a5-bd1c-b3bca28aa0e8",
      "name": "AI Process Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -192,
        -128
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Structures email data by setting recipient address, subject, and AI-generated email content for draft creation.",
        "height": 112,
        "width": 196,
        "color": 6
      },
      "id": "e9054b72-892d-45da-914b-8bb5a52295ac",
      "name": "Prepare Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        272,
        -128
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Saves the generated email as a Gmail draft using Gmail API, ready for manual review and sending.",
        "height": 112,
        "width": 180,
        "color": 5
      },
      "id": "e7fde65d-82c0-4184-b1cb-933a63595cbe",
      "name": "Gmail Draft Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        496,
        -128
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=send message {{ $json.chatInput }}",
        "messages": {
          "messageValues": [
            {
              "message": "=You are an AI email writing assistant.\nYour task is to generate professional, well-structured emails based on the provided context and instructions.\n\nGuidelines:\n- Always address the sender by name if provided.  \n- Keep the tone respectful, clear, and professional. \n- Structure the email with proper greeting, body, and closing \n- Every new sentence in the body should be from new line\n- Ensure proper grammar and formatting for paragraphs in the body\n- Include all necessary information mentioned\n- Summarize long emails before replying if needed.  \n- Provide clear answers or actions, and confirm receipt when appropriate.  \n- If the request is unclear, politely ask for clarification.  \n- Keep replies short (3â€“6 sentences), unless a longer explanation is required.  \n- Use correct grammar and formatting.  \n- Do not include subject line in the email body \n\nEmail structure example:\n'Dear [RECIPIENT],\n\nThank you for your message.\n\nI appreciate you taking the time to review my application and proceed accordingly.\nPlease let me know if you need any additional information from my side.\n\nBest regards,\nSergiu'\n\nInput Instructions: {{ $json.emailInstructions }}\nContext/Purpose: get the context from the instructions\nSubject/Title: add subject or topic of email based on the instructions\n\nOutput: Drafted email reply body, with Best Regards, my name is Sergiu. Also add subject into output json under subject key."
            }
          ]
        }
      },
      "id": "3867fe53-345b-4e28-9885-ba8faba63f1a",
      "name": "Generate Email with AI",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        -192,
        16
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "63b99545-3d2d-4563-b9d7-078cbc20dbcc",
              "name": "subject",
              "type": "string",
              "value": "={{ $json.subject }}"
            },
            {
              "id": "11d94d3f-2170-4b54-b5f9-b85bb95ad472",
              "name": "message",
              "type": "string",
              "value": "={{ $json.body }}"
            }
          ]
        },
        "options": {}
      },
      "id": "fd6306bd-b729-4b34-9c97-fbbe88fe58fd",
      "name": "Prepare Email Content",
      "type": "n8n-nodes-base.set",
      "position": [
        320,
        16
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "resource": "draft",
        "subject": "={{ $json.subject }}",
        "message": "={{ $json.message }}",
        "options": {}
      },
      "id": "4e356a7c-3992-4b97-8a04-1f8f84f29322",
      "name": "Save as Gmail Draft",
      "type": "n8n-nodes-base.gmail",
      "position": [
        528,
        16
      ],
      "webhookId": "12345678-90ab-cdef-1234-567890abcdef",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "6ZNnHZRObc0alAvd",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -192,
        208
      ],
      "id": "a23c3a2c-d6bb-4a63-a4d3-4192d50e0e2b",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  let parsed;\n  try {\n    parsed = JSON.parse(item.json.text); // try to parse the string as JSON\n  } catch (e) {\n    parsed = { subject: \"\", text: item.json.text }; // fallback\n  }\n  return { json: parsed };\n});\n"
      },
      "id": "defaf9d7-07d1-4b9c-b86a-bcb4fc25af48",
      "name": "Parse JSON Status",
      "type": "n8n-nodes-base.code",
      "position": [
        112,
        16
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "content": "Parses JSON output from the LLM Model getting subject and body of generated email contents.",
        "height": 112,
        "width": 184,
        "color": 6
      },
      "id": "a32b9776-fcc1-429a-9d08-037a0fce67b2",
      "name": "Parse Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        64,
        -128
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -416,
        16
      ],
      "id": "d87145b7-111a-435a-ac6b-bcbe8a0a152c",
      "name": "Executed by other flow"
    }
  ],
  "pinData": {},
  "connections": {
    "Prepare Email Content": {
      "main": [
        [
          {
            "node": "Save as Gmail Draft",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Email with AI": {
      "main": [
        [
          {
            "node": "Parse JSON Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Generate Email with AI",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Parse JSON Status": {
      "main": [
        [
          {
            "node": "Prepare Email Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Executed by other flow": {
      "main": [
        [
          {
            "node": "Generate Email with AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "timeSavedPerExecution": 10
  },
  "versionId": "5eea0c82-d67e-4db6-9585-1ded64556b10",
  "meta": {
    "instanceId": "3fdd671e7fc1859ff2383b05c6eea518207a3d971ca0642cd42531697f273a8c"
  },
  "id": "BWHgDUTxbsqAcgYw",
  "tags": [
    {
      "createdAt": "2025-09-08T07:55:19.208Z",
      "updatedAt": "2025-09-08T07:55:19.208Z",
      "id": "8mzLwVwaYcqGeRXd",
      "name": "email"
    },
    {
      "createdAt": "2025-09-09T01:56:14.838Z",
      "updatedAt": "2025-09-09T01:56:14.838Z",
      "id": "WGKeBpZ8QGTDFC5E",
      "name": "compose"
    },
    {
      "createdAt": "2025-09-08T07:55:37.716Z",
      "updatedAt": "2025-09-08T07:55:37.716Z",
      "id": "Wotdd6nOv1ZH7qrJ",
      "name": "drafts"
    }
  ]
}