{
  "name": "master",
  "nodes": [
    {
      "parameters": {
        "public": true,
        "options": {
          "loadPreviousSession": "memory"
        }
      },
      "id": "9c0aa96f-37fb-4ed0-b316-b86b904a266f",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        -160,
        144
      ],
      "webhookId": "9eab0524-6cd7-4b81-8bd8-4d050a972a08",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "o3",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "7861a1a9-d8a2-4f9c-8d02-ba15710d303b",
      "name": "Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -192,
        368
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 50000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -80,
        368
      ],
      "id": "86028b92-ad27-4769-ae0e-642196eb91a4",
      "name": "Memory"
    },
    {
      "parameters": {
        "content": "Personal assistant agent that analyzes submitted requests delegates and provides feedback on specific task.",
        "height": 96,
        "width": 232,
        "color": 2
      },
      "id": "881e8149-a473-4b1e-8680-8e02004cb84c",
      "name": "CTO Agent Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        128,
        16
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Chat trigger that receives personal requests or tasks and initiates the interaction with the Personal Assistant agent.",
        "height": 96,
        "width": 232,
        "color": 3
      },
      "id": "7c28e72e-d89f-4b37-a8f5-878f7cdd8b01",
      "name": "Chat Trigger Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -160,
        16
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "toolDescription": "You are a helpful Email Assistant. \nMy name is Sergiu.\n\n🔑 Rules:\n0. Do not just provide chat feedback. Trigger tools only.\n1. For creating new emails → call \"Create Draft\".\n2. For cleaning spam → call \"Clean Spam\".\n3. For cleaning drafts → call \"Clean Drafts\".\n4. Otherwise, answer email-related questions directly.\n\n💾 Memory:\n- Remember recent email activity and drafts.\n\n📤 Output JSON:\n{\n  \"action\": \"tool_call\" | \"respond\",\n  \"tool\": \"Create Draft | Clean Spam | Clean Drafts | None\",\n  \"arguments\": { \"subject\": \"...\", \"body\": \"...\", \"filters\": \"...\" },\n  \"response\": \"Natural language explanation for Sergiu\"\n}\n",
        "text": "={{$json}}",
        "options": {}
      },
      "id": "7b5531d3-5e2b-4d25-b3e7-d7ed3ec9f357",
      "name": "Mail Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        1152,
        368
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "o3",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "a0c0c747-73b1-4e0a-8213-0df2873ffcfb",
      "name": "Mail Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1152,
        528
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "description": "Call this tool to send a mail draft",
        "workflowId": {
          "__rl": true,
          "value": "BWHgDUTxbsqAcgYw",
          "mode": "list",
          "cachedResultName": "mail-draft"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1232,
        656
      ],
      "id": "f1ea014b-87bc-4677-9758-743cf2222fdc",
      "name": "Create Draft"
    },
    {
      "parameters": {
        "description": "Call this tool to clean email spam",
        "workflowId": {
          "__rl": true,
          "value": "prHQevGtXaWcY7wg",
          "mode": "list",
          "cachedResultName": "mail-draft-cleaner"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1344,
        656
      ],
      "id": "0997a44f-6f4d-4e10-9ebe-6e8b6824625a",
      "name": "Clean Drafts"
    },
    {
      "parameters": {
        "description": "Call this tool to clean email spam",
        "workflowId": {
          "__rl": true,
          "value": "penMMNPrl3jphZRQ",
          "mode": "list",
          "cachedResultName": "mail-spam-cleaner"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1456,
        656
      ],
      "id": "4ecd497b-8c2b-4033-9a82-c38a2da59662",
      "name": "Clean Spam"
    },
    {
      "parameters": {
        "description": "Call this tool to trigger the newsletter fetch",
        "workflowId": {
          "__rl": true,
          "value": "9MWvHmSry7VECDzJ",
          "mode": "list",
          "cachedResultName": "newsletter"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        960,
        656
      ],
      "id": "249bd153-bdfd-4cb6-8970-caef30524b70",
      "name": "Newsletter"
    },
    {
      "parameters": {
        "description": "Call this tool to trigger report generation",
        "workflowId": {
          "__rl": true,
          "value": "bT8VKE7JFnOTfSaU",
          "mode": "list",
          "cachedResultName": "report-weekly"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1072,
        656
      ],
      "id": "d169afa0-39e1-4fff-9bc1-04a76061ebc6",
      "name": "Report"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "o3",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "30fa5d58-9202-4da3-8dd8-a6bd75811461",
      "name": "General Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        784,
        528
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "You are a helpful General Assistant. \nMy name is Sergiu.\n\n🔑 Rules:\n0. Do not just provide chat feedback. Trigger tools only.\n1. For newsletters or latest news → call \"Newsletter\" workflow tool.\n2. For report / reports / weekly reports → call \"Report\" workflow tool.\n3. For other general questions → answer directly.\n\n💾 Memory:\n- Keep track of recent news/report queries.\n\n📤 Output JSON:\n{\n  \"action\": \"tool_call\" | \"respond\",\n  \"tool\": \"Newsletter | Report | None\",\n  \"arguments\": { \"topic\": \"subject matter\" },\n  \"response\": \"Explanation or report for Sergiu\"\n}\n",
        "text": "={{$json}}",
        "options": {}
      },
      "id": "c2f3a46b-a82f-4b57-93a2-83dc63f2c858",
      "name": "General Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        784,
        368
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {},
      "id": "42718f6c-f613-4b97-be30-a4e73cc1c9e7",
      "name": "Think",
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "position": [
        -208,
        800
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "toolDescription": "You are a Software Architect Agent. \nYou design scalable systems, select patterns, and propose high-level solutions.\n\nCall this AI Agent that specializes in system architecture, design patterns, technology stack decisions, and scalability planning\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"system\": \"architecture details\" },\n  \"response\": \"Architecture proposal for Sergiu\"\n}",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "83776303-782a-48c7-8492-fb2477637869",
      "name": "Software Architect Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        -192,
        976
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a DevOps Engineer Agent. \nYou manage CI/CD pipelines, cloud deployments, and infrastructure as code.\n\nCall this AI Agent that specializes in CI/CD pipelines, infrastructure automation, containerization, and deployment strategies\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"pipeline\": \"devops task\" },\n  \"response\": \"DevOps solution for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "8d0bb311-964f-4b38-9378-9a125099e509",
      "name": "DevOps Engineer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        1088,
        976
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a Security Engineer Agent. \nYou identify vulnerabilities, enforce best practices, and improve compliance.\n\nCall this AI Agent that specializes in application security, vulnerability assessments, secure coding practices, and compliance frameworks\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"security\": \"security task\" },\n  \"response\": \"Security advice for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "fcb4ec7a-effe-4760-bcfd-8db9e85e6c3d",
      "name": "Security Engineer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        832,
        976
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a QA Test Engineer Agent. \nYou ensure quality through test design, automation, and validation.\n\nCall this AI Agent that specializes in test automation, quality assurance strategies, test case design, and performance testing\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"test\": \"qa task\" },\n  \"response\": \"QA solution for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "7989ad44-abf4-431a-98d0-b27f220bbad2",
      "name": "QA Test Engineer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        576,
        976
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a Backend Developer Agent. \nYou implement APIs, databases, and backend services.\n\nCall this AI Agent that specializes in server-side development, API design, database architecture, and microservices implementation\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"service\": \"backend task\" },\n  \"response\": \"Backend solution for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "e8565c7c-2cbe-4b52-8306-4e91fdaf5474",
      "name": "Backend Developer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        320,
        976
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a Frontend Developer Agent. \nYou implement UI/UX, responsive design, and frontend frameworks.\n\nCall this AI Agent that specializes in user interface development, responsive design, frontend frameworks, and user experience optimization\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"ui\": \"frontend task\" },\n  \"response\": \"Frontend solution for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "d5e7b24e-cf26-459d-9571-b597d87baaa0",
      "name": "Frontend Developer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        64,
        976
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "41386ed9-2416-4374-a474-b95878612f8f",
      "name": "Architect Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -192,
        1152
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "af3bc3e0-b19b-4e89-9900-ae1792db2019",
      "name": "Frontend Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        64,
        1152
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "06fba7f2-d5b6-46c2-84ad-39502cd007fc",
      "name": "Backend Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        320,
        1152
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "037371a5-1ae2-4ac9-ba80-aa8121c73206",
      "name": "QA Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        576,
        1152
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "a5500cd0-cd61-43c1-9f14-9e2403e07c93",
      "name": "Security Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        832,
        1152
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "4242234e-1fa4-42cf-b460-7bb1a33a8139",
      "name": "DevOps Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1088,
        1152
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "description": "Call this tool to pull git updates",
        "workflowId": {
          "__rl": true,
          "value": "bk6aMU5sIvjJBQU3",
          "mode": "list",
          "cachedResultName": "git-updates"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1632,
        656
      ],
      "id": "741668da-1e38-4499-928f-6593ed591236",
      "name": "Git Update"
    },
    {
      "parameters": {
        "description": "Call this tool to pull PRs and prepare code review drafts",
        "workflowId": {
          "__rl": true,
          "value": "ryubZDpF5stfDkm1",
          "mode": "list",
          "cachedResultName": "git-reviews"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1744,
        656
      ],
      "id": "0527c7ba-e724-4b8f-b0a8-da583a8750bd",
      "name": "Code Review"
    },
    {
      "parameters": {
        "toolDescription": "You are a helpful Infrastructure Assistant. \nMy name is Sergiu.\n\n🔑 Rules:\n0. Do not just provide chat feedback. Trigger tools only.\n1. For fetching Git updates → call \"Git Update\".\n2. For reviewing Git pull requests → call \"Code Review\".\n3. For shutting down Windows → call \"Windows\".\n4. Otherwise, answer infrastructure-related questions directly.\n\n💾 Memory:\n- Remember repo names, last operations, or system context.\n\n📤 Output JSON:\n{\n  \"action\": \"tool_call\" | \"respond\",\n  \"tool\": \"Git Update | Code Review | Win Shutdown | None\",\n  \"arguments\": { \"repo\": \"optional repo name\", \"details\": \"additional context\" },\n  \"response\": \"Explanation for Sergiu\"\n}\n",
        "text": "={{$json}}",
        "options": {}
      },
      "id": "8c99d7fd-5474-483f-81f0-3e2781bcb8ae",
      "name": "Infra Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        1552,
        368
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "o3",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "25499a47-15a3-455b-89ee-04fa90f12193",
      "name": "Infra Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1552,
        528
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "\n## 🧠 **CTO AGENT WITH ENGINEERING TEAM**\n\nThis multi-agent n8n automation simulates a complete engineering department. A strategic CTO agent receives your technical requests, analyzes engineering needs, and delegates to specialized agents for architecture, DevOps, security, QA, backend, and frontend development—delivering comprehensive technical solutions instantly.\n\nPowered by OpenAI O3 & GPT-4.1-mini Multi-Agent System\nFor any questions or support explore more tips and tutorials here:\n   - YouTube: https://www.youtube.com/@YaronBeen/videos\n   - LinkedIn: https://www.linkedin.com/in/yaronbeen/\n\n### ⚙️ **How It Works**\n1. **Chat trigger** receives engineering requests (e.g., \"Design a microservices architecture for e-commerce platform\")\n2. **CTO Agent** (O3) analyzes request and determines required engineering functions\n3. Delegates to specialist agents:\n   - Software Architect Agent\n   - DevOps Engineer Agent\n   - Security Engineer Agent\n   - QA Test Engineer Agent\n   - Backend Developer Agent\n   - Frontend Developer Agent\n4. Each agent uses **GPT-4.1-mini** for fast, focused execution\n5. Results compiled and returned via chat or integrated with development tools\n\n### 👥 **Meet Your AI Engineering Team**\n|  |  |  |\n|------|-----------------|----------|\n| 🧠 **CTO Agent** &nbsp;&nbsp;&nbsp; | Technical strategy & team delegation &nbsp;&nbsp;&nbsp; | O3 &nbsp;&nbsp;&nbsp; |\n| 🏗️ **Software Architect** &nbsp;&nbsp;&nbsp; | System design, patterns, scalability &nbsp;&nbsp;&nbsp; | GPT-4.1-mini &nbsp;&nbsp;&nbsp; |\n| 🚀 **DevOps Engineer** &nbsp;&nbsp;&nbsp; | CI/CD, infrastructure, deployment &nbsp;&nbsp;&nbsp; | GPT-4.1-mini &nbsp;&nbsp;&nbsp; |\n| 🔒 **Security Engineer** &nbsp;&nbsp;&nbsp; | Security assessments, compliance &nbsp;&nbsp;&nbsp; | GPT-4.1-mini &nbsp;&nbsp;&nbsp; |\n| 🧪 **QA Test Engineer** &nbsp;&nbsp;&nbsp; | Test automation, quality strategies &nbsp;&nbsp;&nbsp; | GPT-4.1-mini &nbsp;&nbsp;&nbsp; |\n| ⚙️ **Backend Developer** &nbsp;&nbsp;&nbsp; | APIs, databases, microservices &nbsp;&nbsp;&nbsp; | GPT-4.1-mini &nbsp;&nbsp;&nbsp; |\n| 🎨 **Frontend Developer** &nbsp;&nbsp;&nbsp; | UI/UX, responsive design, frameworks &nbsp;&nbsp;&nbsp; | GPT-4.1-mini &nbsp;&nbsp;&nbsp; |\n\n\n\n### 💡 **Use Cases**\n- **Full Stack Development**: End-to-end application architecture and implementation\n- **System Architecture**: Scalable designs for microservices, distributed systems\n- **DevOps Automation**: CI/CD pipelines, containerization, cloud deployment\n- **Security Audits**: Vulnerability assessments, secure coding practices\n- **Quality Assurance**: Test automation frameworks, performance testing\n- **Technical Documentation**: API docs, system diagrams, deployment guides\n\n\n### 💸 **Cost Optimization**\n- **O3 for CTO**: Strategic technical decisions only\n- **GPT-4.1-mini for specialists**: 90% cost reduction\n- **Parallel processing**: All agents work simultaneously\n- **Code template reuse**: Common patterns and frameworks",
        "height": 1236,
        "width": 644,
        "color": 5
      },
      "id": "ab0af189-fb05-4a7c-a77c-6ae88e230b65",
      "name": "Sticky Note Main",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -896,
        16
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "toolDescription": "You are a helpful CTO & Manager Agent. \nMy name is Sergiu. \nYou oversee the engineering team and delegate tasks strategically.\n\n🔑 Rules:\n1. Always check with relevant specialist agents (Architect, Backend, Frontend, QA, Security, DevOps) before delegating subtasks.\n2. If a task is clear → execute directly OR delegate to the most appropriate agent.\n3. If a task is very specific → follow instructions exactly.\n4. Always use the RW node when creating, editing, or deleting files.\n\n💾 Memory:\n- Track project goals, architecture decisions, and team responsibilities.\n\n📤 Output JSON:\n{\n  \"action\": \"delegate\" | \"respond\" | \"tool_call\",\n  \"tool\": \"Architect | Backend | Frontend | QA | Security | DevOps | RW Node | None\",\n  \"arguments\": { \"task\": \"description of task\" },\n  \"response\": \"Manager-style explanation for Sergiu\"\n}\n",
        "text": "={{$json}}",
        "options": {}
      },
      "id": "cebd0065-ff04-4b9b-ba2b-9913e1d9f773",
      "name": "CTO Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        112,
        368
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "o3",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "28c6da80-51f2-42e9-94e2-9aec138a146f",
      "name": "CTO Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -208,
        576
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are the main helpful Master AI Personal Assistant Agent. \nMy name is Sergiu. You act as the main router and coordinator.\n\nGuidelines:\nIn case of delegating task to a different agent, interpret the output and report the action without doing anything else - IE: Action x was completed.\n\n🔑 Rules:\n1. For reports, news or newsletter and all other topics → delegate to \"General Agent\".\n2. For anything related to email → delegate to \"Mail Agent\".\n3. For anything related to Git, computer, or Windows → delegate to \"Infra Agent\".\n4. For anything related to software development, engineering, or technical subjects (except Git/Windows) → delegate to \"CTO Agent\".\n\n💾 Memory:\n- Maintain a conversation history with Sergiu so you can recall past queries.\n\n📤 Output:\nAlways interpret the output and provide feedback in natural language.\n"
        }
      },
      "id": "ae9a7382-fef7-4b5a-a424-b303e4306813",
      "name": "Master AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        128,
        144
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "description": "Call this tool to shut the computer",
        "workflowId": {
          "__rl": true,
          "value": "7ZB5rVzzaBDdMmrg",
          "mode": "list",
          "cachedResultName": "win-shutdown"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1856,
        656
      ],
      "id": "3a9bc4ea-d1dd-451d-a4bd-7d022a45087a",
      "name": "Windows"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Master AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Model": {
      "ai_languageModel": [
        [
          {
            "node": "Master AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Memory": {
      "ai_memory": [
        [
          {
            "node": "When chat message received",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Master AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Mail Agent": {
      "ai_tool": [
        [
          {
            "node": "Master AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Mail Model": {
      "ai_languageModel": [
        [
          {
            "node": "Mail Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Create Draft": {
      "ai_tool": [
        [
          {
            "node": "Mail Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Clean Drafts": {
      "ai_tool": [
        [
          {
            "node": "Mail Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Clean Spam": {
      "ai_tool": [
        [
          {
            "node": "Mail Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Report": {
      "ai_tool": [
        [
          {
            "node": "General Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Newsletter": {
      "ai_tool": [
        [
          {
            "node": "General Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "General Model": {
      "ai_languageModel": [
        [
          {
            "node": "General Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "General Agent": {
      "ai_tool": [
        [
          {
            "node": "Master AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Architect Model": {
      "ai_languageModel": [
        [
          {
            "node": "Software Architect Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Frontend Model": {
      "ai_languageModel": [
        [
          {
            "node": "Frontend Developer Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Backend Model": {
      "ai_languageModel": [
        [
          {
            "node": "Backend Developer Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "QA Model": {
      "ai_languageModel": [
        [
          {
            "node": "QA Test Engineer Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Security Model": {
      "ai_languageModel": [
        [
          {
            "node": "Security Engineer Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "DevOps Model": {
      "ai_languageModel": [
        [
          {
            "node": "DevOps Engineer Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Infra Model": {
      "ai_languageModel": [
        [
          {
            "node": "Infra Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Git Update": {
      "ai_tool": [
        [
          {
            "node": "Infra Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code Review": {
      "ai_tool": [
        [
          {
            "node": "Infra Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Infra Agent": {
      "ai_tool": [
        [
          {
            "node": "Master AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Software Architect Agent": {
      "ai_tool": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Frontend Developer Agent": {
      "ai_tool": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Backend Developer Agent": {
      "ai_tool": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "QA Test Engineer Agent": {
      "ai_tool": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Security Engineer Agent": {
      "ai_tool": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "DevOps Engineer Agent": {
      "ai_tool": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "CTO Model": {
      "ai_languageModel": [
        [
          {
            "node": "CTO Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "CTO Agent": {
      "ai_tool": [
        [
          {
            "node": "Master AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Windows": {
      "ai_tool": [
        [
          {
            "node": "Infra Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8ca12c5a-711c-4129-9586-5d82707ab4c0",
  "meta": {
    "instanceId": "3fdd671e7fc1859ff2383b05c6eea518207a3d971ca0642cd42531697f273a8c"
  },
  "id": "Ju4IRXklHRndX6wD",
  "tags": []
}