{
  "name": "master",
  "nodes": [
    {
      "parameters": {
        "public": true,
        "options": {
          "loadPreviousSession": "memory"
        }
      },
      "id": "0b435640-5fbf-418a-a4a7-60a16edfac83",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        -1472,
        -240
      ],
      "webhookId": "9eab0524-6cd7-4b81-8bd8-4d050a972a08",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "description": "Call this tool to trigger the newsletter fetch",
        "workflowId": {
          "__rl": true,
          "value": "9MWvHmSry7VECDzJ",
          "mode": "list",
          "cachedResultName": "newsletter"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -928,
        432
      ],
      "id": "9b54579e-df94-4958-a2ca-9b20aa349902",
      "name": "Newsletter"
    },
    {
      "parameters": {
        "description": "Call this tool to trigger report generation",
        "workflowId": {
          "__rl": true,
          "value": "bT8VKE7JFnOTfSaU",
          "mode": "list",
          "cachedResultName": "report-weekly"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -1040,
        432
      ],
      "id": "6b72e561-8bb8-4949-afbc-6555e4069041",
      "name": "Report"
    },
    {
      "parameters": {
        "toolDescription": "You are a helpful General Assistant. \nMy name is Sergiu.\n\nBefore doing anything or choosing what to do make sure to use \"Think\". It is used to think about something. It will not obtain new information or change the database, but just append the thought to the log. Use it when complex reasoning or some cache memory is needed.\n\n🔑 Rules:\n- Do not just provide chat feedback. Trigger tools only.\n- For newsletters or latest news → call \"Newsletter\" workflow tool.\n- For report / reports / weekly reports → call \"Report\" workflow tool.\n- For shutdown or shutting down computer, pc, or Windows → call \"Shutdown\" tool.\n- For reboot or restart computer, pc, or Windows → call \"Reboot\" tool.\n- For creating new emails → call \"Create Draft\" tool.\n- For cleaning spam → call \"Spam\" tool.\n- For cleaning drafts → call \"Drafts\" tool.\n- For cleaning trash → call \"Trash\" tool.\n- For other general questions → answer directly.\n\n💾 Memory:\n- Keep track of recent news/report queries.\n\n📤 Output JSON:\n{\n  \"action\": \"tool_call\" | \"respond\",\n  \"tool\": \"Newsletter | Report | None\",\n  \"arguments\": { \"topic\": \"subject matter\" },\n  \"response\": \"Explanation or report for Sergiu\"\n}",
        "text": "={{$json}}",
        "options": {}
      },
      "id": "4a1c0799-59b1-49a1-b755-1253eaed88de",
      "name": "General Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        -1184,
        -32
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {},
      "id": "68365d2d-22ba-45fe-999f-9a70274f5d4b",
      "name": "Think",
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "position": [
        -544,
        208
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "toolDescription": "You are a Software Architect Agent. \nYou design scalable systems, select patterns, and propose high-level solutions.\n\nCall this AI Agent that specializes in system architecture, design patterns, technology stack decisions, and scalability planning\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"system\": \"architecture details\" },\n  \"response\": \"Architecture proposal for Sergiu\"\n}",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "84f57bcf-c305-43b6-b772-9243a5a67ac7",
      "name": "Software Architect Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        -272,
        432
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a DevOps Engineer Agent. \nYou manage CI/CD pipelines, cloud deployments, and infrastructure as code.\n\nCall this AI Agent that specializes in CI/CD pipelines, infrastructure automation, containerization, and deployment strategies\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"pipeline\": \"devops task\" },\n  \"response\": \"DevOps solution for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "c9f1303e-d3bb-4c65-9bf8-a77185ce5874",
      "name": "DevOps Engineer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        1008,
        432
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a Security Engineer Agent. \nYou identify vulnerabilities, enforce best practices, and improve compliance.\n\nCall this AI Agent that specializes in application security, vulnerability assessments, secure coding practices, and compliance frameworks\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"security\": \"security task\" },\n  \"response\": \"Security advice for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "95c60489-a56b-48cb-87eb-ad13b9e2a9cf",
      "name": "Security Engineer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        752,
        432
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a QA Test Engineer Agent. \nYou ensure quality through test design, automation, and validation.\n\nCall this AI Agent that specializes in test automation, quality assurance strategies, test case design, and performance testing\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"test\": \"qa task\" },\n  \"response\": \"QA solution for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "5cda56f1-1175-4487-bf24-ce0a6e99b92f",
      "name": "QA Test Engineer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        496,
        432
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a Backend Developer Agent. \nYou implement APIs, databases, and backend services.\n\nCall this AI Agent that specializes in server-side development, API design, database architecture, and microservices implementation\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"service\": \"backend task\" },\n  \"response\": \"Backend solution for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "15caa0c3-fb83-49e7-9497-cae39ce72cb3",
      "name": "Backend Developer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        240,
        432
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "toolDescription": "You are a Frontend Developer Agent. \nYou implement UI/UX, responsive design, and frontend frameworks.\n\nCall this AI Agent that specializes in user interface development, responsive design, frontend frameworks, and user experience optimization\n\n📤 Output JSON:\n{\n  \"action\": \"respond\",\n  \"tool\": \"None\",\n  \"arguments\": { \"ui\": \"frontend task\" },\n  \"response\": \"Frontend solution for Sergiu\"\n}\n",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "911b2c53-da0c-4dfd-bace-0a82e54f7c18",
      "name": "Frontend Developer Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        -16,
        432
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "description": "Call this tool to pull git updates",
        "workflowId": {
          "__rl": true,
          "value": "bk6aMU5sIvjJBQU3",
          "mode": "list",
          "cachedResultName": "git-updates"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -384,
        432
      ],
      "id": "f6ec32bc-b985-4af5-88b0-fccd3d5f421d",
      "name": "Git Update"
    },
    {
      "parameters": {
        "content": "\n\n## 🧠 **Multi‑agent division coordinated by Master AI**\n\nThis n8n workflow routes every chat through a **Master AI Agent** which decides whether to use the **General Agent** (ops/email/Git/PC/news/reports) or the **EM Agent** (software & engineering). The EM then orchestrates six specialist engineering agents.\n\n### ⚙️ How it works\n1) **Chat Trigger ➜ Master AI Agent (GPT‑4.1)**  \n   Master is the router and coordinator; it maintains conversation memory and interprets agent/tool outputs into natural‑language feedback.\n\n2) **Routing**\n   - **General topics** *(email, Git, PC/Windows, reports, news/newsletters, and other non‑engineering items)* ➜ **General Agent (O3)**  \n     – General Agent primarily **calls tools** rather than chatting.\n   - **Software/engineering topics** *(except Git/Windows)* ➜ **EM Agent (O3)**  \n     – EM consults the relevant specialists before finalizing answers.\n\n3) **General Agent → Tooling palette**\n   - **Newsletter**, **Report (weekly)**, **Git Update**, **PR Review**\n   - **Create Draft (email)**\n   - **Write File**, **Read File**, **Delete File**\n   - **Spam**, **Drafts**, **Trash** (mail cleanup)\n   - **Shutdown**, **Reboot** (Windows host actions)\n\n4) **EM Agent → Specialist team (GPT‑4.1‑mini)**\n   - **Software Architect** — system design, patterns, scalability\n   - **DevOps Engineer** — CI/CD, infra, deployments\n   - **Security Engineer** — vulns, secure coding, compliance\n   - **QA Test Engineer** — test plans, automation, performance\n   - **Backend Developer** — APIs, databases, microservices\n   - **Frontend Developer** — UI/UX, responsive frameworks\n   - *(A lightweight **Think** step is available for scratch‑pad reasoning.)*\n\n5) **Response**\n   - Master interprets tool/agent outputs and replies with a clear status (e.g., “Action X was completed”) plus any requested details.\n\n### 🧩 Models in this workflow\n- **Master AI Agent:** GPT‑4.1\n- **General Agent:** O3\n- **EM Agent:** O3\n- **Specialists (all six):** GPT‑4.1‑mini\n\n> Tip: Ask for newsletters, weekly reports, Git updates, or PR reviews directly—Master will route to General and trigger the right tool automatically. For architecture or build/deploy questions, Master will route to the EM and the specialist engineers.",
        "height": 1220,
        "width": 644,
        "color": 7
      },
      "id": "5e9c5daa-169a-4519-bc30-1f4600523ebb",
      "name": "Sticky Note Main",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2208,
        -240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are the main helpful Master AI Personal Assistant Agent. \nMy name is Sergiu. You act as the main router and coordinator.\n\n\n🔑 Rules:\n- Do not just provide chat feedback. Trigger tools only.\n- For anything related to email (draft, new, spam, trash etc), pc, computer, windows, reports, news or newsletter and all other topics → delegate to \"General Agent\" tool.\n- For anything related to software development, engineering, git or technical subjects (except Git/Windows) → delegate to \"EM Agent\".\n\n💾 Memory:\n- Maintain a conversation history with Sergiu so you can recall past queries.\n\n📤 Output:\nAlways interpret the output and provide feedback in natural language.\n"
        }
      },
      "id": "732ba643-db09-4c1a-98d5-f0e0722a1987",
      "name": "Master AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -1168,
        -240
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "355d64c8-2fbe-4c88-9061-10499a378746",
      "name": "Tech Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        848,
        912
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "description": "Call this tool to shut the computer",
        "workflowId": {
          "__rl": true,
          "value": "7ZB5rVzzaBDdMmrg",
          "mode": "list",
          "cachedResultName": "win-shutdown"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -816,
        432
      ],
      "id": "94f5dd27-ed24-484f-9041-a7a42a682a3a",
      "name": "Shutdown"
    },
    {
      "parameters": {
        "description": "Call this tool to reboot the computer",
        "workflowId": {
          "__rl": true,
          "value": "rDh3hfKgGhwvlOWE",
          "mode": "list",
          "cachedResultName": "win-reboot"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -704,
        432
      ],
      "id": "5b1bc409-fc48-4efd-bb68-af2da8b2d423",
      "name": "Reboot"
    },
    {
      "parameters": {
        "description": "Call this tool to pull PRs and prepare code review drafts",
        "workflowId": {
          "__rl": true,
          "value": "ryubZDpF5stfDkm1",
          "mode": "list",
          "cachedResultName": "git-reviews"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -496,
        432
      ],
      "id": "85ab518f-b5c2-4af5-b38c-32ab4bb6c709",
      "name": "PR Review"
    },
    {
      "parameters": {
        "toolDescription": "You are a helpful Engineering Manager Agent. \nMy name is Sergiu. \nYou oversee the engineering team and delegate tasks strategically.\n\nBefore doing anything or choosing what to do make sure to use \"Think\". It is used to think about something. It will not obtain new information or change the database, but just append the thought to the log. Use it when complex reasoning or some cache memory is needed.\n\n🔑 Rules:\n- Use Think tool before making a decision\n- For development tasks check with relevant specialist agents (Architect, Backend, Frontend, QA, Security, DevOps) before delegating subtasks.\n   1. If a task is clear → execute directly OR delegate to the most appropriate agent.\n   2. If a task is very specific → follow instructions exactly.\n- For writing, editing or creating file → call \"Write File\" tool with:\n   1. Extract filename and directory from user request\n   2. Use 'data' field for content (default: empty string or relevant content)\n   3. Use 'file' field for complete file path (e.g., \"C:\\\\Users\\\\Jomiru Sergiu\\\\Downloads\\\\test.txt\")\n- For reading file → call \"Read File\" tool.\n- For deleting file → call \"Delete File\" tool. Report that deletion is completed after if file not found.\n\n💾 Memory:\n- Track project goals, architecture decisions, and team responsibilities.\n\n📤 Output JSON:\n{\n  \"action\": \"delegate\" | \"respond\" | \"tool_call\",\n  \"tool\": \"Architect | Backend | Frontend | QA | Security | DevOps | RW Node | None\",\n  \"arguments\": { \"task\": \"description of task\" },\n  \"response\": \"Manager-style explanation for Sergiu\"\n}",
        "text": "={{$json}}",
        "options": {}
      },
      "id": "47c5195b-ea3b-414d-a87a-6b794342593c",
      "name": "EM Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        -416,
        -32
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "o3",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "5683a649-fd22-4842-9701-25f64f1ac7a5",
      "name": "Agent Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -640,
        208
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "id": "7c611f2a-a3ad-49c0-ac4d-37d9a17d1849",
      "name": "Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -1344,
        -32
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "wwvhoLcIlADIQmDC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "You are Read/Write Agent. \nYou manage reading and writing to local environment",
        "text": "={{ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "id": "054f324e-0772-487a-aad9-cffd49d439b4",
      "name": "RW Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        1008,
        672
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "description": "Call this tool to write a file",
        "workflowId": {
          "__rl": true,
          "value": "Fc2UliWrsU6BUgGs",
          "mode": "list",
          "cachedResultName": "win-write-file"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "data": "={{ $fromAI('data', 'Text content to write to the file', 'string') }}",
            "file": "={{ $fromAI('file', 'Full file path where the content should be written', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "data",
              "displayName": "Data",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "file",
              "displayName": "File",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1072,
        912
      ],
      "id": "50c4f184-c05a-42f4-b739-cbac747d8e74",
      "name": "Write"
    },
    {
      "parameters": {
        "description": "Call this tool to read a file",
        "workflowId": {
          "__rl": true,
          "value": "1hPlBGCMbxAgrgCr",
          "mode": "list",
          "cachedResultName": "win-read-file"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "file": "={{ $fromAI('file', 'Full file path to read from', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "file",
              "displayName": "File",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        976,
        912
      ],
      "id": "b04a2a92-abb2-4b7f-aee0-892ab64978e6",
      "name": "Read"
    },
    {
      "parameters": {
        "description": "Call this tool to delete a file",
        "workflowId": {
          "__rl": true,
          "value": "IN3E2wOHnVv300ov",
          "mode": "list",
          "cachedResultName": "win-delete-file"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "file": "={{ $fromAI('file', 'Full file path to delete', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "file",
              "displayName": "File",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1168,
        912
      ],
      "id": "a2b3e8ac-818c-4e7d-aa58-c44e49f6306d",
      "name": "Delete"
    },
    {
      "parameters": {
        "description": "Call this tool to clean email spam",
        "workflowId": {
          "__rl": true,
          "value": "prHQevGtXaWcY7wg",
          "mode": "list",
          "cachedResultName": "mail-draft-cleaner"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -1376,
        432
      ],
      "id": "8df1bb57-57a5-4748-9590-6c1a723d21e2",
      "name": "Clean Drafts"
    },
    {
      "parameters": {
        "description": "Call this tool to clean email spam",
        "workflowId": {
          "__rl": true,
          "value": "penMMNPrl3jphZRQ",
          "mode": "list",
          "cachedResultName": "mail-spam-cleaner"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -1264,
        432
      ],
      "id": "3381eaea-5928-483f-b598-02aed0140a45",
      "name": "Clean Spam"
    },
    {
      "parameters": {
        "description": "Call this tool to clean email spam",
        "workflowId": {
          "__rl": true,
          "value": "YbEtNU7da2Qj2v37",
          "mode": "list",
          "cachedResultName": "mail-trash-cleaner"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -1152,
        432
      ],
      "id": "36c94ad2-6e96-43b1-b6ee-4a2f8674e240",
      "name": "Clean Trash"
    },
    {
      "parameters": {
        "description": "Call this tool to send a mail draft",
        "workflowId": {
          "__rl": true,
          "value": "BWHgDUTxbsqAcgYw",
          "mode": "list",
          "cachedResultName": "mail-draft"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $fromAI('chatInput', 'Chat message or email content', 'string') }}",
            "emailInstructions": "={{ $fromAI('emailInstructions', 'Email instructions including recipient, subject context, and any specific requirements', 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "Chat Input",
              "required": true,
              "defaultValue": "",
              "type": "string"
            },
            {
              "id": "emailInstructions",
              "displayName": "Email Instructions",
              "required": true,
              "defaultValue": "",
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -1488,
        432
      ],
      "id": "bf70a383-af22-4fe5-bd9f-0b7a195cda7d",
      "name": "New Email"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Master AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Report": {
      "ai_tool": [
        [
          {
            "node": "General Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Newsletter": {
      "ai_tool": [
        [
          {
            "node": "General Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "General Agent": {
      "ai_tool": [
        [
          {
            "node": "Master AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Git Update": {
      "ai_tool": [
        [
          {
            "node": "EM Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "EM Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "General Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Software Architect Agent": {
      "ai_tool": [
        [
          {
            "node": "EM Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Frontend Developer Agent": {
      "ai_tool": [
        [
          {
            "node": "EM Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Backend Developer Agent": {
      "ai_tool": [
        [
          {
            "node": "EM Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "QA Test Engineer Agent": {
      "ai_tool": [
        [
          {
            "node": "EM Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Security Engineer Agent": {
      "ai_tool": [
        [
          {
            "node": "EM Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "DevOps Engineer Agent": {
      "ai_tool": [
        [
          {
            "node": "EM Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Tech Model": {
      "ai_languageModel": [
        [
          {
            "node": "Software Architect Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Frontend Developer Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Backend Developer Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "QA Test Engineer Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Security Engineer Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "DevOps Engineer Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "RW Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Shutdown": {
      "ai_tool": [
        [
          {
            "node": "General Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Reboot": {
      "ai_tool": [
        [
          {
            "node": "General Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "PR Review": {
      "ai_tool": [
        [
          {
            "node": "EM Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "EM Agent": {
      "ai_tool": [
        [
          {
            "node": "Master AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Agent Model": {
      "ai_languageModel": [
        [
          {
            "node": "General Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "EM Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Model": {
      "ai_languageModel": [
        [
          {
            "node": "Master AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Write": {
      "ai_tool": [
        [
          {
            "node": "RW Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Read": {
      "ai_tool": [
        [
          {
            "node": "RW Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete": {
      "ai_tool": [
        [
          {
            "node": "RW Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "RW Agent": {
      "ai_tool": [
        [
          {
            "node": "Software Architect Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Frontend Developer Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Backend Developer Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "QA Test Engineer Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Security Engineer Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "DevOps Engineer Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Clean Drafts": {
      "ai_tool": [
        [
          {
            "node": "General Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Clean Spam": {
      "ai_tool": [
        [
          {
            "node": "General Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Clean Trash": {
      "ai_tool": [
        [
          {
            "node": "General Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "New Email": {
      "ai_tool": [
        [
          {
            "node": "General Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "db38e601-be9e-4617-b77e-e9838a94aa11",
  "meta": {
    "instanceId": "3fdd671e7fc1859ff2383b05c6eea518207a3d971ca0642cd42531697f273a8c"
  },
  "id": "Ju4IRXklHRndX6wD",
  "tags": []
}